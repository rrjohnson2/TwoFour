{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/constants/app.constant.ts","webpack:///src/app/constants/error.state.matches.ts","webpack:///src/app/layout/admin.auth.guard.ts","webpack:///src/app/layout/admin/admin.component.ts","webpack:///src/app/layout/admin/admin.component.html","webpack:///src/app/layout/alert-manager/alert-manager.component.ts","webpack:///src/app/layout/alert-manager/alert-manager.component.html","webpack:///src/app/layout/auth.guard.ts","webpack:///src/app/layout/bit-content/bit-content.component.ts","webpack:///src/app/layout/bit-content/bit-content.component.html","webpack:///src/app/layout/footer/footer.component.ts","webpack:///src/app/layout/footer/footer.component.html","webpack:///src/app/layout/four-digit-code/four-digit-code.component.ts","webpack:///src/app/layout/four-digit-code/four-digit-code.component.html","webpack:///src/app/layout/home/countdown/countdown.component.ts","webpack:///src/app/layout/home/countdown/countdown.component.html","webpack:///src/app/layout/home/home.component.ts","webpack:///src/app/layout/home/home.component.html","webpack:///src/app/layout/home/submit-modal/submit-modal.component.ts","webpack:///src/app/layout/home/submit-modal/submit-modal.component.html","webpack:///src/app/layout/home/submit-modal/submit-modal.service.ts","webpack:///src/app/layout/layout-routing.module.ts","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/layout/layout.module.ts","webpack:///src/app/layout/login/login.component.ts","webpack:///src/app/layout/login/login.component.html","webpack:///src/app/layout/reverse.auth.guard.ts","webpack:///src/app/layout/signup/signup.component.ts","webpack:///src/app/layout/signup/signup.component.html","webpack:///src/app/layout/update/update.component.ts","webpack:///src/app/layout/update/update.component.html","webpack:///src/app/layout/update/update.service.ts","webpack:///src/app/layout/welcome/welcome.component.ts","webpack:///src/app/layout/welcome/welcome.component.html","webpack:///src/app/models/member.ts","webpack:///src/app/pipe/count-time.pipe.ts","webpack:///src/app/pipe/safe-html.pipe.ts","webpack:///src/app/service/app-variables.service.ts","webpack:///src/app/service/global.service.ts","webpack:///src/app/service/ui.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","isSmallScreen","window","screen","width","backendUrl","image_server_url","Actions","MyErrorStateMatcher","control","form","invalidCtrl","invalid","parent","dirty","invalidParent","AdminAuthGuard","router","appVariables","current_member","role","navigate","AdminComponent","AlertManagerComponent","variable","alerts","alerts_ob","subscribe","data","alert","closeAlert","AuthGuard","localStorage","getItem","BitContentComponent","placeholder","bit","src","type","URL","createObjectURL","match","FooterComponent","year","Date","getFullYear","FourDigitCodeComponent","appvariables","glob","createForm","codeForm","required","minLength","maxLength","ticket","mem","temp_member","get","value","authenticate","fillMember","temp_ticket","alert_ticket","action_attempted","authenicateCode","msg","addAlert","error","generateCode","submit","resendCode","CountdownComponent","facebook","instagram","twitter","reload","emit","HomeComponent","variables","today","hours_to_secs_24","init","currentContest_ob","contest","previousContest_ob","previousContest","populateBit","event","console","log","post_count","reloadBS","getPreviousContest","populatePreviousContest","currrentContest","getContest","populateContest","winning_content_url","bitComp","winning_content_type","setTimeout","nextContest","SubmitModalComponent","uiService","submitService","auto_size_text_area","upload_button","submission","content_extension","content_type","content_url","description","member","rolls","current_member_ob","submitForm","subTicket","content_file","win","winnerFile","File","uploadSubmission","backupSlot","backupFile","setup","reset","old_file","target","files","name","split","pop","fileChangeEvent","SubmitModalService","http","post","file","formData","FormData","append","providedIn","component","children","canActivate","LayoutRoutingModule","forChild","LayoutComponent","ui","init_boolean","getMember","sidenav","opened","close","open","thing","logOff","container_or_fluid","toggle","onActivate","LayoutModule","LoginComponent","initForm","loginForm","email_phone_username","password","valid","login","signUp","ReverseAuthGuard","SignupComponent","matcher","email_regex","phoneno","signUpForm","username","email_phone","password_check","newsletter","notify","validators","checkPasswords","messageMedium","email_or_phone","choice_id","email","phone","signup","group","pass","confirmPass","notSame","emailPhone","length","UpdateComponent","uiserve","updateServe","choice","usernameForm","emailForm","confirm","confirming","phoneForm","pattern","min","facebookForm","twitterForm","instagramForm","passwordForm","old_password","noticeForm","modal","temp","verified","updatePassword","toLocaleUpperCase","cancel","message","update","c","dismissAll","choose","UpdateService","WelcomeComponent","Member","CountTimePipe","intervals","val","place","time","amount","Math","floor","push","i","undefined","SafeHtmlPipe","sanitizer","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","AppVariablesService","current_member_id","current_member_encrypted_password","current_member_bs","asObservable","currentContest_bs","currentContest","previousContest_bs","alerts_bs","count","popup","types","success","icon","strong","danger","info","warning","decrypt","reload_contest","res","setItem","encrypt","next","removeItem","splice","indexOf","GlobalService","UIService","modalService","content","modalDimension","windowClass","size","centered","result","closeResult","reason","getDismissReason","ESC","BACKDROP_CLICK","$","each","on","style","height","scrollHeight","jQuery","inputs","document","getElementsByClassName","buttons","pairs","button","input","forEach","pair","addEventListener","ele","click","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LayoutModule } from './layout/layout.module';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'layout', loadChildren: () => LayoutModule },\r\n  { path: '', redirectTo:'layout', pathMatch:'prefix'},\r\n  { path: '**', redirectTo:'layout', pathMatch:'prefix'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'blumorel';\n}\n","<router-outlet></router-outlet>\r\n<!--  -->","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","\r\n\r\nexport var isSmallScreen = window.screen.width < 992;\r\n\r\nexport var backendUrl = \"http://bakendtwofour-env.eba-2ezcpqfm.us-east-2.elasticbeanstalk.com/\"\r\n\r\nexport var image_server_url = \"http://twofourpicture-env.eba-avytpez6.us-east-2.elasticbeanstalk.com/\"\r\n\r\nexport enum Actions {\r\n  logOff,\r\n  login,\r\n  signup,\r\n  submit,\r\n  generateCode,\r\n  authenicateCode,\r\n  currrentContest,\r\n  previousContest\r\n}  ","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n      const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n      const invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);\r\n  \r\n      return (invalidCtrl || invalidParent);\r\n    }\r\n  }","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AppVariablesService } from '../service/app-variables.service';\r\n\r\n@Injectable()\r\nexport class AdminAuthGuard implements CanActivate {\r\n  path: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n  route: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router, private appVariables: AppVariablesService) { }\r\n\r\n  canActivate() {\r\n    if (this.appVariables.current_member.role != \"admin\") {\r\n\r\n      this.router.navigate(['/layout/home']);\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin works!</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\n\n@Component({\n  selector: 'app-alert-manager',\n  templateUrl: './alert-manager.component.html',\n  styleUrls: ['./alert-manager.component.scss']\n})\nexport class AlertManagerComponent implements OnInit {\n\n  \n  @Input()\n  public alerts: Array<IAlert> = [];\n  \n\n  ngOnInit(): void {\n    this.variable.alerts_ob.subscribe(data=>{\n      this.alerts = data;\n    })\n  }\n  constructor(private variable:AppVariablesService) {\n      \n  }\n\n  close(alert: IAlert) {\n    this.variable.closeAlert(alert)\n  }\n  \n}\n\nexport interface IAlert {\n  id: number;\n  type: string;\n  strong?: string;\n  message: string;\n  icon?: string;\n}\n\nexport interface Type {\n  strong?: string;\n  icon?: string;\n}\n\n","<div class=\"alerts\">\n    <div class=\"alert\"  *ngFor=\"let alert of alerts\">\n        <ngb-alert [type]=\"alert.type\"  [dismissible]=\"true\"  (close)=\"close(alert)\" >\n          <ng-container *ngIf=\"alert.icon\">\n            <div class=\"alert-inner--icon\">\n                <i class=\"{{alert.icon}}\"></i>\n            </div>\n          </ng-container>\n          <span class=\"alert-inner--text\">  <strong>{{alert.strong}} </strong>{{ alert.message }}</span>\n        </ngb-alert>\n      </div>\n</div>\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AppVariablesService } from '../service/app-variables.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  path: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n  route: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router,private appVariables:AppVariablesService) { }\r\n\r\n  canActivate() {\r\n    if(this.appVariables.current_member==null && localStorage.getItem(\"current_member_id\") ==null)\r\n    {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bit-content',\r\n  templateUrl: './bit-content.component.html',\r\n  styleUrls: ['./bit-content.component.sass']\r\n})\r\nexport class BitContentComponent implements OnInit {\r\n\r\n   @Input()type;\r\n   @Input()src;\r\n\r\n   @Input()placeholder=false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  init(bit)\r\n  {\r\n    if(bit ==null)\r\n    {\r\n      this.src = null;\r\n      this.type= null;\r\n    }\r\n    else{\r\n      this.type = bit.type;\r\n      this.src= URL.createObjectURL(bit)\r\n    };\r\n\r\n  }\r\n\r\n  render_type(type:string)\r\n  {\r\n    if(type.match(\"image\")) return 'image';\r\n    else if(type.match(\"video\")) return 'video';\r\n    else if(type.match(\"audio\")) return 'audio';\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"src !=null;else welcome\">\r\n  <div *ngIf=\"render_type(type) == 'image';else video\">\r\n    <img class=\"preview\" [src]=\"src | safeHtml: 'resourceUrl'\" >\r\n  </div>\r\n  \r\n  <ng-template #video>\r\n    <div *ngIf=\"render_type(type) =='video';else audio\">\r\n      <video class=\"preview\" [src]=\"src | safeHtml: 'resourceUrl'\"  controls></video>\r\n    </div>\r\n  </ng-template>\r\n  \r\n  <ng-template #audio>\r\n    <div *ngIf=\"render_type(type) =='audio'\">\r\n      <audio class=\"preview\" controls [src]=\"src | safeHtml: 'resourceUrl'\" >\r\n        </audio>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n<ng-template #welcome>\r\n  <video *ngIf=\"!placeholder\" class=\"preview\" src=\"assets/video/placeholder.mp4\" controls></video>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  year = new Date().getFullYear();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer\">\r\n      <!-- Copyright -->\r\n  <div class=\"footer-copyright text-center text-black-50 py-3\">\r\n    Two Four Viral &#169; {{year}} \r\n  </div>\r\n  <!-- Copyright -->\r\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { GlobalService } from 'src/app/service/global.service';\nimport { Ticket } from 'src/app/interfaces/ticket';\nimport { Router } from '@angular/router';\nimport { Actions } from 'src/app/constants/app.constant';\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\n\n@Component({\n  selector: 'app-four-digit-code',\n  templateUrl: './four-digit-code.component.html',\n  styleUrls: ['./four-digit-code.component.scss']\n})\nexport class FourDigitCodeComponent implements OnInit {\n\n  constructor(private router:Router, private appvariables:AppVariablesService, private glob:GlobalService) { }\n\n  codeForm:FormGroup;\n  ngOnInit(): void {\n    this.createForm()\n  }\n  createForm()\n  {\n    this.codeForm = new FormGroup({\n      code:new FormControl(null,[Validators.required,Validators.minLength(6),Validators.maxLength(6)])\n    });\n  }\n  submit(){\n      var ticket:Ticket={\n        data:{\n          mem: this.appvariables.temp_member,\n          code:this.codeForm.get(\"code\").value\n        }\n      }\n\n      this.glob.authenticate(ticket).subscribe(data=>{\n        this.appvariables.fillMember(this.appvariables.temp_member,this.appvariables.temp_ticket);\n        this.router.navigate(['/layout/home'])\n        var alert_ticket:AlertTicket= {action_attempted:Actions.authenicateCode,msg:'Authenicate Code Success',type:'success'};\n\n        this.appvariables.addAlert(alert_ticket);\n      },\n      error=>\n      {\n        var alert_ticket:AlertTicket= {action_attempted:Actions.authenicateCode,msg:'Could not Authenicate Code',type:'danger'};\n\n        this.appvariables.addAlert(alert_ticket);\n      })\n  }\n  resendCode()\n  {\n    this.glob.generateCode(this.appvariables.temp_member).subscribe(\n      data=>\n      {\n        var alert_ticket:AlertTicket= {action_attempted:Actions.authenicateCode,msg:'Code Generated',type:'success'};\n\n        this.appvariables.addAlert(alert_ticket);\n      },\n      error =>{\n        var alert_ticket:AlertTicket= {action_attempted:Actions.authenicateCode,msg:'Could not Generate Code',type:'danger'};\n\n        this.appvariables.addAlert(alert_ticket);\n      }\n    )\n  }\n}\n","<div class=\"row justify-content-center two_four_card_holder\">\n    <div class=\"col-lg-6 col-sm-12 sm_reduce_col_12_padding\">\n        <div class=\"card two_four_card\">\n            <form [formGroup]=\"codeForm\" (ngSubmit)=\"submit()\">\n\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <fieldset class=\"col-12\">\n                            <input matInput class=\"form-control\" placeholder=\"Enter Code Check Email or Phone\"\n                                formControlName=\"code\" type=\"number\">\n                        </fieldset>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12 text-center\">\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Submit Code</button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12 text-center\">\n                            <a (click)=\"resendCode()\" color=\"accent\">\n                                <small>Resend Code</small>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {  faFacebook, faTwitter,faInstagram } from '@fortawesome/free-brands-svg-icons';\n\n\n@Component({\n  selector: 'app-countdown',\n  templateUrl: './countdown.component.html',\n  styleUrls: ['./countdown.component.scss']\n})\nexport class CountdownComponent implements OnInit {\n\n  @Input() time:Date;\n  @Input() progress;\n  @Input() subs;\n  @Input() winner;\n  @Input() description;\n  facebook = faFacebook;\n  instagram = faInstagram;\n  twitter = faTwitter;\n  @Output() reload:EventEmitter<any> = new EventEmitter<any>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  refresh_contest(){\n    this.reload.emit(null);\n  }\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"row\">\n            <div *ngIf=\"winner!=null ;else welcome\">\n\n                <div class=\"col-lg-6 col-sm-12\">\n                    <mat-accordion>\n                        <mat-expansion-panel>\n                            <mat-expansion-panel-header>\n                                <mat-panel-title>\n                                    <mat-icon>account_circle</mat-icon>\n                                    <strong>{{winner.username}}</strong>\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n\n                            <mat-selection-list  [multiple]=\"false\">\n                                <mat-list-option>\n                                    <a mat-list-item target=\"_blank\" href=\"https://facebook.com/{{winner.facebook}}\">\n                                        <fa-icon [icon]=\"facebook\" size=\"lg\"></fa-icon>\n                                        <strong>{{winner.facebook}}</strong>\n                                    </a>\n                                </mat-list-option>\n                                <mat-list-option>\n                                    <a mat-list-item target=\"_blank\" href=\"https://instagram.com/{{winner.instagram}}\">\n                                        <fa-icon [icon]=\"instagram\" size=\"lg\"></fa-icon>\n                                        <strong>{{winner.twitter}}</strong>\n                                    </a>\n                                </mat-list-option>\n                                <mat-list-option>\n                                    <a mat-list-item target=\"_blank\" href=\"https://twitter.com/{{winner.twitter}}\">\n                                        <fa-icon [icon]=\"twitter\" size=\"lg\"></fa-icon>\n                                        <strong>{{winner.instagram}}</strong>\n                                    </a>\n                                </mat-list-option>\n                            </mat-selection-list>\n\n                        </mat-expansion-panel>\n                    </mat-accordion>\n                </div>\n\n                <div class=\"col-12\">\n                    <p>{{description}}</p>\n                </div>\n            </div>\n        </div>\n\n        <ng-template #welcome>\n            <p>\n                Welcome to Two Four Viral the first and only viral lottery.\n                Everyday a user's submission is chosen at random.\n                The chosen submission will be featured on the site for 24 hours,\n                during which the next lottery will be running for the following day.\n                One submission per lottery.\n                but you will be able to change it before the winner is announced for the lottery\n                to which you are submitting. Once the winner is announced a notification will be sent to your phone\n                or email. You can also change notifications at any time.\n            </p>\n        </ng-template>\n    </div>\n</div>\n\n\n\n\n\n<div class=\"row\">\n    <div class=\"col-12\">\n        <div class=\"row\">\n            <div class=\"col-8\">\n                <a matTooltip=\"Contest End\" [matTooltipPosition]=\"'after'\" #tooltiptime=\"matTooltip\"\n                    (click)=\"tooltiptime.toggle()\">\n                    <button class=\"long_12_button \" mat-raised-button color=\"accent\">\n                        {{time | date:'short'}} EST\n                    </button>\n                </a>\n\n            </div>\n            <div class=\"col-4\">\n                <a matTooltip=\"Submission Count\" [matTooltipPosition]=\"'after'\" #tooltip=\"matTooltip\"\n                    (click)=\"tooltip.toggle()\">\n                    <button class=\"long_12_button \" mat-raised-button color=\"accent\">\n                        {{subs}}\n                    </button>\n                </a>\n            </div>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit, ViewChild, AfterViewChecked, AfterViewInit } from '@angular/core';\r\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\r\nimport { Contest } from 'src/app/models/contest';\r\nimport { GlobalService } from 'src/app/service/global.service';\r\nimport { SubmitModalComponent } from './submit-modal/submit-modal.component';\r\nimport { Actions, image_server_url } from 'src/app/constants/app.constant';\r\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\r\nimport { BitContentComponent } from '../bit-content/bit-content.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(SubmitModalComponent) submit: SubmitModalComponent;\r\n  @ViewChild(BitContentComponent) bitComp: BitContentComponent\r\n  contest: Contest;\r\n  previousContest: Contest;\r\n  today: Date = new Date();\r\n  hours_to_secs_24: number = 86400;\r\n  constructor(private variables: AppVariablesService, private glob: GlobalService) { }\r\n  ngAfterViewInit(): void {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n\r\n  }\r\n  init() {\r\n    this.variables.currentContest_ob.subscribe(data => {\r\n      this.contest = data\r\n    });\r\n    this.variables.previousContest_ob.subscribe(data => {\r\n      this.previousContest = data;\r\n      this.populateBit(<Contest>data);\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  nextContest(event) {\r\n    console.log(\"here\");\r\n    this.variables.current_member.post_count = 0;\r\n    this.variables.reloadBS(this.variables.current_member);\r\n\r\n    this.glob.getPreviousContest().subscribe(data => { this.variables.populatePreviousContest(data) },\r\n      error => {\r\n        var alert_ticket: AlertTicket = { action_attempted: Actions.currrentContest, msg: 'Could Load Current Contest', type: 'danger' };\r\n\r\n        this.variables.addAlert(alert_ticket)\r\n      });\r\n\r\n\r\n    this.glob.getContest().subscribe(\r\n      data => { this.variables.populateContest(data) },\r\n      error => {\r\n        var alert_ticket: AlertTicket = { action_attempted: Actions.currrentContest, msg: 'Could Load Prev Contest', type: 'danger' };\r\n\r\n        this.variables.addAlert(alert_ticket)\r\n      })\r\n\r\n\r\n  }\r\n  populateBit(data: Contest) {\r\n    if (data != null && data.winning_content_url != null) {\r\n      if (this.bitComp != null) {\r\n        this.bitComp.type = data.winning_content_type;\r\n        this.bitComp.src = image_server_url + \"getSubmission?sub=\" + data.winning_content_url;\r\n      }\r\n      else{\r\n        setTimeout(()=>{\r\n            this.populateBit(data);\r\n        }, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row justify-content-center two_four_card_holder\">\r\n    <div class=\"col-lg-7 col-sm-12 sm_reduce_col_12_padding\">\r\n        <div class=\"card two_four_card\">\r\n            <div class=\"card-body\">\r\n\r\n                <app-bit-content></app-bit-content>\r\n                <div class=\"row \">\r\n                    <div class=\"col-12\">\r\n                        <app-countdown (reload)=\"nextContest($event)\"\r\n                            [description]=\"previousContest?.winning_description\" [winner]=\"previousContest?.winner\"\r\n                            [subs]=\"contest?.sub_count\" [time]=\"contest?.calendar\"></app-countdown>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                    <div class=\"col-12 \">\r\n                        <button class=\"long_12_button\" mat-raised-button color=\"primary\"\r\n                            routerLink=\"/layout/submit\">Submit Lottery</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { Member } from 'src/app/models/member';\nimport { Router } from '@angular/router';\nimport { UIService } from 'src/app/service/ui.service';\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Submission } from 'src/app/interfaces/submission';\nimport { BitContentComponent } from '../../bit-content/bit-content.component';\nimport { SubmitModalService } from './submit-modal.service';\nimport { SubmissionTicket } from 'src/app/models/submission-ticket';\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\nimport { Actions } from 'src/app/constants/app.constant';\n\n@Component({\n  selector: 'app-submit-modal',\n  templateUrl: './submit-modal.component.html',\n  styleUrls: ['./submit-modal.component.scss']\n})\nexport class SubmitModalComponent implements OnInit, AfterViewInit {\n\n  member: Member;\n  @ViewChild('classic1') modal: ElementRef;\n  @ViewChild(BitContentComponent) bitComp: BitContentComponent;\n\n  submitForm: FormGroup;\n  submission: Submission;\n  content_file: File;\n  extension: string;\n\n  constructor(private router: Router, private uiService: UIService,\n    private variables: AppVariablesService,\n    private submitService: SubmitModalService\n  ) { }\n  ngAfterViewInit(): void {\n    this.uiService.auto_size_text_area();\n    this.uiService.upload_button();\n    this.submission = {\n      content_extension: \"\",\n      content_type:\"\",\n      content_url: \"\",\n      description: \"\",\n      member: this.member,\n      rolls: 1\n    };\n  }\n\n  ngOnInit(): void {\n    this.variables.current_member_ob.subscribe(data => this.member = data);\n\n    this.createForm();\n\n  }\n  createForm() {\n    this.submitForm = new FormGroup({\n      description: new FormControl(null, [Validators.required])\n    })\n  }\n  submit() {\n    this.submission.description = this.submitForm.get(\"description\").value;\n    this.submitService.submit(this.submission).subscribe(\n      data => {\n        var subTicket: SubmissionTicket = <SubmissionTicket>data;\n        if (this.content_file != null) {\n          if (subTicket.win) {\n            var winnerFile: File = new File([this.content_file], subTicket.win, { type: this.content_file.type });\n            this.submitService.uploadSubmission(winnerFile).subscribe(\n              data => {\n                var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'File Uploaded', type: 'success' };\n\n                this.variables.addAlert(alert_ticket);\n              },\n              error => {\n                var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'Could Not Submit Fieloo', type: 'danger' };\n\n                this.variables.addAlert(alert_ticket);\n              }\n            );\n          }\n          if (subTicket.backupSlot) {\n            var backupFile: File = new File([this.content_file], subTicket.backupSlot, { type: this.content_file.type });\n            this.submitService.uploadSubmission(backupFile).subscribe(\n              data => {\n                var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'File Uploaded', type: 'success' };\n\n                this.variables.addAlert(alert_ticket);\n              },\n              error => {\n                var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'Could Not Submit', type: 'danger' };\n\n                this.variables.addAlert(alert_ticket);\n              }\n            );\n          }\n        }\n        var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'Post submitted', type: 'success' };\n\n        this.variables.addAlert(alert_ticket);\n        this.variables.setup();\n        this.router.navigate(['/layout/home']);\n      },\n      error => {\n        var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'Could Not Submit', type: 'danger' };\n\n        this.variables.addAlert(alert_ticket);\n        this.submitForm.reset();\n        this.bitComp.init(null);\n      }\n    )\n\n  }\n  fileChangeEvent(event) {\n    var old_file = event.target.files[0];\n\n    this.submission.content_extension = \".\" + old_file.name.split('.').pop();\n\n    this.submission.content_type=old_file.type;\n    this.bitComp.init(old_file);\n    this.content_file = new File([old_file], \"temp\", { type: old_file.type });\n\n  }\n\n}\n","<div class=\"row justify-content-center two_four_card_holder\">\n    <div class=\"col-lg-7 col-sm-12 sm_reduce_col_12_padding\">\n        <div class=\"card two_four_card\">\n            <form [formGroup]=\"submitForm\" (ngSubmit)=\"submit()\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <fieldset class=\"col-12\">\n                            <legend>Description</legend>\n                            <textarea formControlName=\"description\" class=\"form-control textarea\" rows=\"1\"></textarea>\n                        </fieldset>\n                        <div class=\" offset-1 col-10  textarea_icon_container  \">\n                            <app-bit-content [placeholder]=\"true\"></app-bit-content>\n                            <input hidden class=\"target_input\" type=\"file\" (change)=\"fileChangeEvent($event)\" accept=\"\n                            video/*,\n                            audio/*,\n                            image/*\n                            \" />\n                            <button class=\"long_12_button button_upload\" mat-raised-button color=\"accent\"\n                                matTooltip=\"Photo/Audio/Video\" [matTooltipPosition]=\"'after'\" #tooltip=\"matTooltip\"\n                                (click)=\"tooltip.toggle()\" type=\"button\">\n                                Upload Photo/Image/Video\n                            </button>\n                        </div>\n                        <div class=\"col-12 \">\n                            <button type=\"submit\" *ngIf=\"submitForm.valid\" class=\"long_12_button\" mat-raised-button\n                                color=\"primary\">Submit</button>\n                            <button *ngIf=\"submitForm.invalid\" class=\"long_12_button\" mat-raised-button\n                                disabled>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { backendUrl ,image_server_url } from 'src/app/constants/app.constant';\nimport { Submission } from 'src/app/interfaces/submission';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubmitModalService {\n\n  constructor(private http:HttpClient) { }\n\n  submit(submission:Submission)\n  {\n    return this.http.post(backendUrl+\"submit\",submission);\n  }\n\n  uploadSubmission(file:File)\n  {\n    const formData = new FormData();\n    formData.append('sub',file);\n    return this.http.post(image_server_url +\"uploadSubmission\",formData);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UpdateComponent } from './update/update.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { FourDigitCodeComponent } from './four-digit-code/four-digit-code.component';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ReverseAuthGuard } from './reverse.auth.guard';\r\nimport { SubmitModalComponent } from './home/submit-modal/submit-modal.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminAuthGuard } from './admin.auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n    {\r\n        path:'',\r\n        component: LayoutComponent,\r\n        children:[\r\n                    { path: '', redirectTo:'home', pathMatch:\"prefix\"},\r\n\r\n                    {\r\n                        path:\"home\",\r\n                        component: HomeComponent,\r\n                    },\r\n                    {\r\n                        path:\"login\",\r\n                        component: LoginComponent,\r\n                        canActivate:[ReverseAuthGuard]\r\n                    }\r\n                    ,\r\n                    {\r\n                        path:\"signup\",\r\n                        component: SignupComponent,\r\n                        canActivate:[ReverseAuthGuard]\r\n                    },\r\n                    {\r\n                        path:\"authenticate\",\r\n                        component: FourDigitCodeComponent,\r\n                        canActivate:[ReverseAuthGuard]\r\n                    },\r\n                    {\r\n                        path:\"update\",\r\n                        component: UpdateComponent,\r\n                        canActivate: [AuthGuard]\r\n                    },\r\n                    {\r\n                        path:\"submit\",\r\n                        component: SubmitModalComponent,\r\n                        canActivate: [AuthGuard]\r\n                    },\r\n                    {\r\n                        path:\"about\",\r\n                        component:WelcomeComponent\r\n                    },\r\n                    {\r\n                        path:\"admin\",\r\n                        component:AdminComponent,\r\n                        canActivate:[AdminAuthGuard]\r\n                    },\r\n                    \r\n                    { path: '**', redirectTo:'home', pathMatch:\"prefix\"},\r\n        ]\r\n    }\r\n\r\n    \r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LayoutRoutingModule { }\r\n\r\n\r\n\r\n\r\n// canActivate: [AuthGuard]","import { Component, OnInit } from '@angular/core';\r\nimport { UIService } from '../service/ui.service';\r\nimport { AppVariablesService } from '../service/app-variables.service';\r\nimport { Member } from '../models/member';\r\nimport { UpdateComponent } from './update/update.component';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  member: Observable<Member> = new Observable<Member>();\r\n  init_boolean = false;\r\n  constructor(private router: Router, private ui: UIService, private variables: AppVariablesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n  }\r\n  init() {\r\n    this.getMember();\r\n  }\r\n  toggle(sidenav) {\r\n    if (sidenav.opened) {\r\n      sidenav.close();\r\n    }\r\n    else {\r\n      sidenav.open();\r\n    }\r\n  }\r\n  get render_class() {\r\n    return this.ui.container_or_fluid();\r\n  }\r\n  getMember() {\r\n    this.member = this.variables.current_member_ob;\r\n  }\r\n  onActivate(event) {\r\n    if (event instanceof UpdateComponent) {\r\n      this.init();\r\n      let thing = <UpdateComponent>event;\r\n      this.member.subscribe(data => console.log());\r\n    }\r\n  }\r\n  logOff() {\r\n    this.variables.logOff()\r\n    this.router.navigate(['/layout/home/']);\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container>\r\n    <mat-sidenav #sidenav mode=\"push\" opened=\"false\">\r\n        <mat-toolbar color=\"primary\">\r\n            <a routerLink=\"/update\">\r\n                <mat-icon>account_circle</mat-icon>\r\n                <span>{{(member| async)?.username}}</span>\r\n            </a>\r\n            <a *ngIf=\"(member | async) == null\" routerLink=\"/update\">Login</a>\r\n        </mat-toolbar>\r\n        <mat-selection-list #links [multiple]=\"false\">\r\n            <mat-list-option>\r\n                <a mat-list-item routerLink=\"/about\">\r\n                    <legend>About</legend>\r\n                </a>\r\n            </mat-list-option>\r\n            <mat-list-option *ngIf=\"(member | async) != null\">\r\n                <a mat-list-item (click)=\"logOff()\">\r\n                    <legend>Log Off</legend>\r\n                </a>\r\n            </mat-list-option>\r\n            <mat-list-option>\r\n                <a mat-list-item  *ngIf=\"(member | async)!=null && (member | async).role=='admin'\" routerLink=\"/admin\">\r\n                        <legend>Admin</legend>\r\n                </a>\r\n            </mat-list-option>\r\n        </mat-selection-list>\r\n\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <div class=\"layout\">\r\n            <nav class=\"custom_navbar\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-4\">\r\n                        <button (click)=\"toggle(sidenav)\" mat-icon-button color=\"primary\">\r\n                            <mat-icon>menu</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"col-4 text-center\">\r\n                        <a routerLink=\"/home\">\r\n                            Two Four\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <div [class]=\"render_class\">\r\n                <router-outlet (activate)='onActivate($event)'></router-outlet>\r\n            </div>\r\n\r\n\r\n            <app-alert-manager></app-alert-manager>\r\n            <app-footer></app-footer>\r\n\r\n        </div>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UpdateComponent } from './update/update.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { FourDigitCodeComponent } from './four-digit-code/four-digit-code.component';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { LayoutRoutingModule } from './layout-routing.module';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { ReverseAuthGuard } from './reverse.auth.guard';\r\nimport { CountTimePipe } from '../pipe/count-time.pipe';\r\nimport { CountdownComponent } from './home/countdown/countdown.component';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { SubmitModalComponent } from './home/submit-modal/submit-modal.component';\r\nimport { BitContentComponent } from './bit-content/bit-content.component';\r\nimport { SafeHtmlPipe } from '../pipe/safe-html.pipe';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { AlertManagerComponent } from './alert-manager/alert-manager.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { UpdateService } from './update/update.service';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { AppVariablesService } from '../service/app-variables.service';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminAuthGuard } from './admin.auth.guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n    CountTimePipe, SafeHtmlPipe,\r\n    HomeComponent, UpdateComponent, LoginComponent,\r\n    SignupComponent, FourDigitCodeComponent, LayoutComponent,\r\n    FooterComponent, CountdownComponent, SubmitModalComponent,\r\n    BitContentComponent,\r\n    AlertManagerComponent,\r\n    WelcomeComponent,\r\n    AdminComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    LayoutRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule, MatFormFieldModule, MatInputModule,\r\n    MatButtonModule, MatIconModule, MatProgressBarModule,\r\n    MatCheckboxModule, MatChipsModule, MatTooltipModule,\r\n    MatDialogModule, MatBadgeModule, MatMenuModule,\r\n    NgbModule, FontAwesomeModule, MatExpansionModule,\r\n    MatStepperModule\r\n  ],\r\n  providers: [AuthGuard, ReverseAuthGuard, UpdateService,AdminAuthGuard]\r\n})\r\nexport class LayoutModule {\r\n  constructor() {\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\nimport { GlobalService } from 'src/app/service/global.service';\nimport { Member } from 'src/app/models/member';\nimport { Ticket } from 'src/app/interfaces/ticket';\nimport { Actions } from 'src/app/constants/app.constant';\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  constructor(private router: Router, private appVariables: AppVariablesService, private glob: GlobalService) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.loginForm = new FormGroup(\n      {\n        email_phone_username: new FormControl(null, [\n          Validators.required\n        ]),\n        password: new FormControl(null, [\n          Validators.required\n        ])\n      }\n    );\n  }\n\n\n  submit() {\n    if (this.loginForm.valid) {\n      var ticket: Ticket = {\n        id: this.loginForm.get(\"email_phone_username\").value,\n        data: this.loginForm.get(\"password\").value\n      };\n      this.glob.login(ticket).subscribe(data => {\n\n        this.appVariables.fillMember(<Member>data, ticket);\n        this.router.navigate(['layout/home']);\n        var alert_ticket:AlertTicket= {action_attempted:Actions.login,msg:'Login Worked',type:'success'};\n\n        this.appVariables.addAlert(alert_ticket);\n      },\n        error => {\n          var alert_ticket:AlertTicket= {action_attempted:Actions.login,msg:'Login Failed',type:'danger'};\n\n        this.appVariables.addAlert(alert_ticket);\n        });\n    }\n  }\n\n  signUp() {\n    this.router.navigate(['/layout/signup'])\n  }\n\n\n}\n","<div class=\"row justify-content-center two_four_card_holder\">\n    <div class=\"col-lg-6 col-sm-12 sm_reduce_col_12_padding\">\n        <div class=\"card two_four_card\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\n\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <fieldset class=\"col-12\">\n                            <input matInput class=\"form-control\" placeholder=\"Email or Phone Number or Username\"\n                                formControlName=\"email_phone_username\" type=\"text\">\n                        </fieldset>\n                        <fieldset class=\"col-12\">\n                            <input matInput class=\"form-control\" placeholder=\"Password\" formControlName=\"password\"\n                                type=\"password\">\n                        </fieldset>\n                        <div class=\"col-12\">\n                            <button *ngIf=\"loginForm.valid\" class=\"long_12_button\" type=\"\" mat-raised-button\n                                color=\"primary\">Login</button>\n                            <button *ngIf=\"loginForm.invalid\" class=\"long_12_button\" mat-raised-button\n                                disabled>Login</button>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-12 text-center\">\n                            <button (click)=\"signUp()\" mat-raised-button color=\"accent\">Create Account</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AppVariablesService } from '../service/app-variables.service';\r\n\r\n@Injectable()\r\nexport class ReverseAuthGuard implements CanActivate {\r\n  path: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n  route: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router,private appVariables:AppVariablesService) { }\r\n\r\n  canActivate() {\r\n    if(localStorage.getItem(\"current_member_id\") !=null)\r\n    {\r\n      \r\n      this.router.navigate(['/layout/home']);\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MyErrorStateMatcher } from 'src/app/constants/error.state.matches';\nimport { GlobalService } from 'src/app/service/global.service';\nimport { Member } from 'src/app/models/member';\nimport { Router } from '@angular/router';\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\nimport { Actions } from 'src/app/constants/app.constant';\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signUpForm: FormGroup;\n  matcher = new MyErrorStateMatcher;\n  email_regex = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$'\n  phoneno = /\\d/g;\n  constructor(private router: Router, private glob: GlobalService, private appvariables: AppVariablesService) { }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n  createForm() {\n    this.signUpForm = new FormGroup(\n      {\n        username: new FormControl(null, [Validators.required]),\n        email_phone: new FormControl(null, [Validators.required]),\n        password: new FormControl(null, [Validators.required]),\n        password_check: new FormControl(null, [Validators.required]),\n        newsletter: new FormControl(true, []),\n        notify: new FormControl(true, [])\n      }, { validators: this.checkPasswords }\n    )\n  }\n  submit() {\n    var messageMedium = this.email_or_phone();\n\n    if (messageMedium != null) {\n      var member: Member = new Member(\n        this.signUpForm.get(\"username\").value,\n        null,\n        null,\n        false,\n        1,\n        null,\n        null,\n        null,\n        this.signUpForm.get(\"newsletter\").value,\n        messageMedium,\n        this.signUpForm.get(\"notify\").value,\n        null\n      )\n      member.password = this.signUpForm.get(\"password\").value;\n      var choice_id\n      if (messageMedium == \"EMAIL\") {\n        member.email = this.signUpForm.get(\"email_phone\").value;\n        choice_id = member.email\n      }\n      else {\n        member.phone = this.signUpForm.get(\"email_phone\").value;\n        choice_id = member.phone\n      }\n      this.glob.generateCode(member).subscribe(data => {\n      this.appvariables.temp_member = member;\n      this.appvariables.temp_ticket = {\n          id: choice_id,\n          data: member.password\n          }\n        this.router.navigate(['/layout/authenticate']);\n      },\n      error =>{\n        var alert_ticket:AlertTicket= {action_attempted:Actions.signup,msg:'Sign Up Failed',type:'danger'};\n\n        this.appvariables.addAlert(alert_ticket);\n      })\n    }\n   else{\n    var alert_ticket:AlertTicket= {action_attempted:Actions.signup,msg:'enter phone number or email',type:'danger'};\n\n    this.appvariables.addAlert(alert_ticket);\n   } \n  }\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    let pass = group.get('password').value;\n    let confirmPass = group.get('password_check').value;\n\n    return pass === confirmPass ? null : { notSame: true }\n  }\n\n  email_or_phone() {\n    var emailPhone: string = this.signUpForm.get(\"email_phone\").value\n    if (emailPhone.match(this.email_regex)) {\n      return 'EMAIL'\n    }\n    else if (emailPhone.match(this.phoneno) &&emailPhone.match(this.phoneno).length === 10) {\n      return 'PHONE'\n    }\n  }\n\n}\n","<div class=\"row justify-content-center two_four_card_holder\">\n    <div class=\"col-lg-6 col-sm-12 sm_reduce_col_12_padding\">\n        <div class=\"card two_four_card\">\n            <form [formGroup]=\"signUpForm\" (ngSubmit)=\"submit()\">\n\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <fieldset class=\"col-12\">\n                            <input matInput class=\"form-control\" placeholder=\"Username\"\n                                formControlName=\"username\" type=\"text\">\n                        </fieldset>\n                        <fieldset class=\"col-12\">\n                            <input matInput class=\"form-control\" placeholder=\"Email or Phone Number\"\n                                formControlName=\"email_phone\" type=\"text\">\n                        </fieldset>\n                        <fieldset class=\"col-12\">\n                            <input  matInput class=\"form-control\" placeholder=\"Password\" formControlName=\"password\"\n                                type=\"password\">\n                        </fieldset>\n                        <fieldset class=\"col-12\">\n                            <input type=\"password\" class=\"form-control\" matInput placeholder=\"Confirm password\" formControlName=\"password_check\" [errorStateMatcher]=\"matcher\">\n                        </fieldset>\n                        <fieldset class=\"col-12\">\n                            <mat-checkbox formControlName=\"newsletter\" class=\"col-6\" color=\"primary\"  >\n                                <small>\n                                    Sign Up For Newsletter\n                                </small>\n                            </mat-checkbox>\n                            <mat-checkbox formControlName=\"notify\" class=\"col-6\" color=\"primary\"  >\n                                <small>\n                                    Two Four Notifications\n                                </small>\n                            </mat-checkbox>\n                        </fieldset>\n                        <div class=\"col-12\">\n                            <button *ngIf=\"signUpForm.valid\"  class=\"long_12_button\" mat-raised-button color=\"primary\">Sign up</button>\n                            <button *ngIf=\"signUpForm.invalid\"  class=\"long_12_button\" mat-raised-button disabled>Sign up</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Member } from 'src/app/models/member';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { faFacebook, faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons';\nimport { UIService } from 'src/app/service/ui.service';\nimport { MyErrorStateMatcher } from 'src/app/constants/error.state.matches';\nimport { UpdateService } from './update.service';\nimport { Ticket } from 'src/app/interfaces/ticket';\nimport { GlobalService } from 'src/app/service/global.service';\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\nimport { Actions } from 'src/app/constants/app.constant';\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\n\n\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent implements OnInit {\n\n  member: Member\n  usernameForm: FormGroup;\n  emailForm: FormGroup;\n  phoneForm: FormGroup;\n  facebookForm: FormGroup;\n  instagramForm: FormGroup;\n  twitterForm: FormGroup;\n  passwordForm: FormGroup;\n  noticeForm: FormGroup;\n\n  matcher = new MyErrorStateMatcher;\n\n  phoneno = /\\d/g;\n\n  facebook = faFacebook;\n  instagram = faInstagram;\n  twitter = faTwitter;\n\n  choice: string;\n  message;\n  @ViewChild('classic1') modal: ElementRef;\n  constructor(\n    private uiserve: UIService,\n    private updateServe: UpdateService,\n    private variables: AppVariablesService) { }\n\n  ngOnInit(): void {\n  }\n  createForm() {\n\n    switch (this.choice) {\n      case 'username':\n        this.usernameForm = new FormGroup({\n          username: new FormControl(this.member.username, Validators.required)\n        });\n        break;\n      case 'email':\n        this.emailForm = new FormGroup({\n          target: new FormControl(this.member.email, [Validators.required, Validators.email]),\n          confirm: new FormControl(null, [Validators.required, Validators.email])\n\n        }, { validators: this.confirming });\n        break;\n      case 'phone':\n        this.phoneForm = new FormGroup({\n          phone: new FormControl(this.member.phone, [Validators.pattern(this.phoneno), Validators.min(10)])\n        });\n        break;\n      case 'facebook':\n        this.facebookForm = new FormGroup({\n          facebook: new FormControl(this.member.facebook, Validators.required)\n        });\n        break;\n      case 'twitter':\n        this.twitterForm = new FormGroup({\n          twitter: new FormControl(this.member.twitter, Validators.required)\n        });\n        break;\n      case 'instagram':\n        this.instagramForm = new FormGroup({\n          instagram: new FormControl(this.member.instagram, Validators.required)\n        });\n        break;\n      case 'password':\n        this.passwordForm = new FormGroup({\n          old_password: new FormControl(null, Validators.required),\n          target: new FormControl(null, Validators.required),\n          confirm: new FormControl(null, Validators.required)\n\n        }, { validators: this.confirming });\n        break;\n      case 'notifications':\n        this.noticeForm = new FormGroup({\n          notify: new FormControl(this.member.notify),\n          newsletter: new FormControl(this.member.newsletter)\n        });\n        break;\n    }\n\n  }\n  choose(choice) {\n    this.choice = choice;\n    this.createForm();\n    this.uiserve.open(this.modal, \"modal-mini\", 'sm');\n  }\n\n  submit() {\n    var temp: Member = new Member(\n      this.member.username,\n      this.member.email,\n      this.member.phone,\n      this.member.verified,\n      this.member.post_count,\n      this.member.facebook,\n      this.member.instagram,\n      this.member.twitter,\n      this.member.newsletter,\n      this.member.messageMedium,\n      this.member.notify,\n      null\n    )\n    switch (this.choice) {\n      case 'notifications':\n        temp.newsletter = this.noticeForm.get(\"newsletter\").value;\n        temp.notify = this.noticeForm.get(\"notify\").value;\n        break;\n      case 'username':\n        temp.username = this.usernameForm.get(\"username\").value;\n        break;\n      case 'email':\n        temp.email = this.emailForm.get(\"target\").value;\n        if (temp.phone != null) {\n          temp.messageMedium = 'BOTH'\n        }\n        break;\n      case 'phone':\n        temp.phone = this.phoneForm.get(\"phone\").value;\n        if (temp.email != null) {\n          temp.messageMedium = 'BOTH'\n        }\n        break;\n      case 'facebook':\n        temp.facebook = this.facebookForm.get(\"facebook\").value;\n        break;\n      case 'twitter':\n        temp.twitter = this.twitterForm.get(\"twitter\").value;\n        break;\n      case 'instagram':\n        temp.instagram = this.instagramForm.get(\"instagram\").value;\n        break;\n      case 'password':\n        var ticket: Ticket = {\n          id: this.member.username, data: {\n            old_password: this.passwordForm.get('old_password').value,\n            password: this.passwordForm.get(\"target\").value\n          }\n        }\n        this.updateServe.updatePassword(ticket).subscribe(\n          data => {\n            var alert_ticket: AlertTicket = {\n              action_attempted: Actions.signup,\n              msg: 'Updated ' + this.choice.toLocaleUpperCase(),\n              type: 'success'\n            };\n\n            this.variables.addAlert(alert_ticket);\n\n            this.cancel();\n\n          },\n          error => {\n            this.message = \"Failed\"\n          }\n        )\n        return;\n    }\n\n    var ticket: Ticket = { id: this.member.username, data: temp }\n    this.updateServe.update(ticket).subscribe(\n      data => {\n        this.variables.reloadBS(temp);\n        var alert_ticket: AlertTicket = {\n          action_attempted: Actions.signup,\n          msg: 'Updated ' + this.choice.toLocaleUpperCase(),\n          type: 'success'\n        };\n\n        this.variables.addAlert(alert_ticket);\n        this.cancel();\n      },\n      error => {\n        this.message = \"Failed\"\n      }\n    )\n\n\n\n  }\n\n  private confirming(c: AbstractControl): { invalid: boolean } {\n    if (c.get(\"target\").value !== c.get(\"confirm\").value) {\n      return { invalid: true };\n    }\n  }\n\n  cancel() {\n    this.uiserve.dismissAll();\n  }\n\n}\n","<div class=\"row justify-content-center two_four_card_holder\">\n    <div class=\"col-lg-4 col-sm-12 sm_reduce_col_12_padding\">\n        <div class=\"card\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <mat-selection-list class=\"text-center\" [multiple]=\"false\">\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('username')\">\n                                <mat-icon>account_circle</mat-icon>\n                                <span>{{member?.username}}</span>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('email')\">\n                                <mat-icon>email</mat-icon>\n                                <span *ngIf=\"member?.email; else noEmail\">{{member.email}}</span>\n                                <ng-template #noEmail>Email</ng-template>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('phone')\">\n                                <mat-icon>phone</mat-icon>\n                                <span *ngIf=\"member?.phone; else noPhone\">{{member.phone}}</span>\n                                <ng-template #noPhone>Phone</ng-template>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('facebook')\">\n                                <fa-icon [icon]=\"facebook\" size=\"lg\"></fa-icon>\n                                <span *ngIf=\"member?.facebook; else noFacebook\">{{member.facebook}}</span>\n                                <ng-template #noFacebook>Facebook</ng-template>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('twitter')\">\n                                <fa-icon [icon]=\"twitter\" size=\"lg\"></fa-icon>\n                                <span *ngIf=\"member?.twitter; else noTwitter\">{{member.twitter}}</span>\n                                <ng-template #noTwitter>Twitter</ng-template>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('instagram')\">\n                                <fa-icon [icon]=\"instagram\" size=\"lg\"></fa-icon>\n                                <span *ngIf=\"member?.instagram; else noInstagram\">{{member.instagram}}</span>\n                                <ng-template #noInstagram>Instagram</ng-template>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('password')\">\n                                <mat-icon>lock</mat-icon>\n                                <span>Password</span>\n                            </a>\n                        </mat-list-option>\n\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('notifications')\">\n                                <mat-icon>notification_important</mat-icon>\n                                <span>Notification</span>\n                            </a>\n                        </mat-list-option>\n                    </mat-selection-list>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!-- /////////////////////////////////////////////////////////////////////////////////////////////////////////// -->\n\n\n\n<div class=\"modal\">\n    <ng-template #classic1 let-c=\"close\" let-d=\"dismiss\">\n        <strong class=\"modal-title\">Update ~ {{message | titlecase}}</strong>\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n                <form *ngIf=\"choice=='username'; else email\" [formGroup]=\"usernameForm\" (ngSubmit)=\"submit()\">\n                    <mat-form-field class=\"long_12_button\">\n                        <mat-label>{{choice | titlecase}}</mat-label>\n                        <input formControlName=\"username\" matInput placeholder=\"Enter Username\">\n                    </mat-form-field>\n                    <button type=\"submit\" *ngIf=\"usernameForm.valid\" class=\"long_12_button\" mat-raised-button\n                        color=\"primary\">Submit</button>\n                    <button *ngIf=\"usernameForm.invalid\" class=\"long_12_button\" mat-raised-button\n                        disabled>Submit</button>\n                </form>\n                <ng-template #email>\n                    <form *ngIf=\"choice=='email' else phone\" [formGroup]=\"emailForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>{{choice | titlecase}}</mat-label>\n                            <input formControlName=\"target\" matInput placeholder=\"Enter Email\">\n                        </mat-form-field>\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>Confim {{choice | titlecase}} </mat-label>\n                            <input formControlName=\"confirm\" matInput placeholder=\"Confirm Email\"\n                                [errorStateMatcher]=\"matcher\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"emailForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"emailForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #phone>\n                    <form *ngIf=\"choice=='phone' else facebook\" [formGroup]=\"phoneForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>{{choice | titlecase}}</mat-label>\n                            <input formControlName=\"phone\" matInput placeholder=\"Enter Phone\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"phoneForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"phoneForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #facebook>\n                    <form *ngIf=\"choice=='facebook' else twitter\" [formGroup]=\"facebookForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <input formControlName=\"facebook\" matInput placeholder=\"Fill In Route facebook.com/\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"facebookForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"facebookForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #twitter>\n                    <form *ngIf=\"choice=='twitter' else instagram\" [formGroup]=\"twitterForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <input formControlName=\"twitter\" matInput placeholder=\"Fill In Route twitter.com/\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"twitterForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"twitterForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #instagram>\n                    <form *ngIf=\"choice=='instagram' else password\" [formGroup]=\"instagramForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <input formControlName=\"instagram\" matInput placeholder=\"Fill In Route instagram.com/\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"instagramForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"instagramForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #password>\n                    <form *ngIf=\"choice=='password' else notifications\" [formGroup]=\"passwordForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>Old {{choice | titlecase}}</mat-label>\n                            <input type=\"password\" formControlName=\"old_password\" matInput\n                                placeholder=\"Enter Old Password\">\n                        </mat-form-field>\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>New {{choice | titlecase}}</mat-label>\n                            <input type=\"password\" formControlName=\"target\" matInput placeholder=\"New Password\">\n                        </mat-form-field>\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>Confim {{choice | titlecase}} </mat-label>\n                            <input type=\"password\" formControlName=\"confirm\" matInput placeholder=\"Confirm Password\"\n                                [errorStateMatcher]=\"matcher\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"passwordForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"passwordForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #notifications>\n                    <form *ngIf=\"choice=='notifications';\" [formGroup]=\"noticeForm\" (ngSubmit)=\"submit()\">\n                        <mat-checkbox formControlName=\"newsletter\" class=\"col-6\" color=\"primary\"  >\n                            <small>\n                                Sign Up For Newsletter\n                            </small>\n                        </mat-checkbox>\n                        <mat-checkbox formControlName=\"notify\" class=\"col-6\" color=\"primary\"  >\n                            <small>\n                                Two Four Notifications\n                            </small>\n                        </mat-checkbox>\n                        <button type=\"submit\" *ngIf=\"noticeForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"noticeForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n            </div>\n        </div>\n    </ng-template>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Ticket } from 'src/app/interfaces/ticket';\nimport { backendUrl } from 'src/app/constants/app.constant';\nimport { Member } from 'src/app/models/member';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  \n  \n\n  constructor(private http:HttpClient) { }\n\n\n  updatePassword(ticket:Ticket) {\n    return this.http.post(backendUrl+\"updatePassword\",ticket);\n  }\n  update(ticket:Ticket) {\n    return this.http.post(backendUrl+\"update\",ticket);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  @Input() placeholder =false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row justify-content-center two_four_card_holder\">\n    <div class=\"col-lg-7 col-sm-12 sm_reduce_col_12_padding\">\n        <div class=\"card two_four_card\">\n            <div class=\"card-body\">\n                <app-bit-content [placeholder]=\"placeholder\"></app-bit-content>\n                <p>\n                    Welcome to Two Four Viral the first and only viral lottery.\n                    Everyday a user's submission is chosen at random.\n                    The chosen submission will be featured on the site for 24 hours,\n                    during which the next lottery will be running for the following day.\n                    One submission per lottery.\n                    but you will be able to change it before the winner is announced for the lottery\n                    to which you are submitting. Once the winner is announced a notification will be sent to your phone\n                    or email. You can also change notifications at any time.\n                </p>\n            </div>\n        </div>\n\n    </div>\n</div>","export class Member {\n    username: string;\n    email: string;\n    phone: string;\n    verified: boolean;\n    post_count: number;\n    facebook: string;\n    instagram: string;\n    twitter: string;\n    newsletter:boolean;\n    messageMedium:string;\n    notify:boolean;\n    password:string;\n    role:string;\n\n\n    constructor(\n                username:string,\n                email:string,\n                phone:string,\n                verified:boolean,\n                post_count:number,\n                facebook: string,\n                instagram:string,\n                twitter:string,\n                newsletter:boolean,\n                messageMedium:string,\n                notify:boolean,\n                role:string\n             )\n            {\n                this.username = username;\n                this.email = email;\n                this.phone = phone;\n                this.verified = verified;\n                this.post_count = post_count;\n                this.facebook = facebook;\n                this.instagram = instagram;\n                this.twitter = twitter;\n                this.newsletter = newsletter;\n                this.messageMedium = messageMedium;\n                this. notify = notify\n                this.role = role;\n            }\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'count_time'\n})\nexport class CountTimePipe implements PipeTransform {\n\n  transform(value: any, ...args: unknown[]): unknown {\n    const intervals = [\n      3600,60,1\n    ];\n        \n\n        var val = value;\n        var place = 0;\n        var time = [];\n        while(val > 0 && place < intervals.length)\n        {\n           var  amount = val/intervals[place]\n\n           val = val - Math.floor(amount)*intervals[place];\n           time.push(amount);\n           place++;\n        }\n      for(const i in time)\n      {\n        \n        time[i] = Math.floor(time[i]);\n        if(time[i]== undefined) time[i] = \"00\";\n        if(time[i]<10) time[i] = \"0\"+time[i];\n      }\n        \n      return `${time[0]}:${time[1]}:${time[2]}`\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport {DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {\n  }\n  public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n\t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { Member } from '../models/member';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { GlobalService } from './global.service';\nimport { Ticket } from '../interfaces/ticket';\nimport { Contest } from '../models/contest';\nimport { IAlert,Type } from '../layout/alert-manager/alert-manager.component';\nimport { AlertTicket } from '../interfaces/alert-ticket';\nimport { Actions } from '../constants/app.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppVariablesService {\n\n  current_member_id:string = localStorage.getItem(\"current_member_id\");\n  current_member_encrypted_password:string = localStorage.getItem(\"current_member_encrypted_password\");\n  current_member:Member;\n  current_member_bs:BehaviorSubject<Member> = new BehaviorSubject<Member>(this.current_member);\n  current_member_ob:Observable<Member> = this.current_member_bs.asObservable();\n\n  currentContest:Contest;\n  currentContest_bs:BehaviorSubject<Contest> = new BehaviorSubject<Contest>(this.currentContest);\n  currentContest_ob:Observable<Contest> =  this.currentContest_bs.asObservable();\n\n  previousContest:Contest;\n  previousContest_bs:BehaviorSubject<Contest> = new BehaviorSubject<Contest>(this.previousContest);\n  previousContest_ob:Observable<Contest> =  this.previousContest_bs.asObservable();\n\n  temp_member:Member\n  temp_ticket:Ticket;\n\n\n  alerts:IAlert[]=[]\n  alerts_bs:BehaviorSubject<IAlert[]> = new BehaviorSubject<IAlert[]>(this.alerts);\n  alerts_ob: Observable<IAlert[]> = this.alerts_bs.asObservable();\n\n  private count = 0;\n  private popup =5000;\n\n  private types =\n  {\n      success:{\n       icon: 'ni ni-like-2',\n       strong: 'Success!',\n      },\n      danger:{\n        icon: 'ni ni-support-16',\n        strong: 'Danger!',\n       },\n       info:{\n        icon: 'ni ni-bell-55',\n        strong: 'Info!',\n       },\n       warning:{\n        icon: 'ni ni-bell-55',\n        strong: 'Warning!',\n       }\n\n  }\n  \n\n  \n\n  \n\n \n\n  constructor(private glob:GlobalService) {\n    this.setup();\n   }\n\n  setup()\n  {\n    if(this.current_member_id !=null )\n    {\n      var ticket:Ticket={\n        id: this.current_member_id,\n        data: this.decrypt(this.current_member_encrypted_password)\n      }\n      this.glob.login(ticket).subscribe(data=>{\n        this.fillMember(<Member>data,ticket)\n        var alert_ticket:AlertTicket= {action_attempted:Actions.login,msg:'Login Succesful',type:'success'};\n\n        this.addAlert(alert_ticket)\n      },\n      error =>{\n        var alert_ticket:AlertTicket= {action_attempted:Actions.login,msg:'Login Failed',type:'danger'};\n\n        this.addAlert(alert_ticket)\n      })\n    }\n\n    this.reload_contest()\n  }\n  reload_contest() {\n    this.glob.getContest().subscribe(data=>{\n      this.populateContest(data);\n  },\n  error =>{\n    var alert_ticket:AlertTicket= {action_attempted:Actions.currrentContest,msg:'Could Load Current Contest',type:'danger'};\n\n        this.addAlert(alert_ticket)\n  });\n\n  this.glob.getPreviousContest().subscribe(data=>{\n    this.populatePreviousContest(data);\n},\nerror =>{\n  var alert_ticket:AlertTicket= {action_attempted:Actions.currrentContest,msg:'Could Load Prev Contest',type:'danger'};\n\n      this.addAlert(alert_ticket)\n});\n\n  }\n  \n\n  encrypt(value)\n  {\n    var res = value;\n    // encrypt\n    return res;\n    \n  }\n  decrypt(value)\n  {\n    var res =value ;\n    // decrypt\n    return res;\n  }\n  fillMember(mem:Member,ticket:Ticket)\n  {\n        this.current_member_id = ticket.id;\n        localStorage.setItem(\"current_member_id\", ticket.id);\n        localStorage.setItem(\"current_member_encrypted_password\", this.encrypt(ticket.data));   \n         \n        this.reloadBS(mem);\n\n\n  }\n  \n  reloadBS(mem:Member)\n  {\n    this.current_member = mem;\n    this.current_member_bs.next(mem);\n  }\n  logOff()\n  {\n    this.current_member_id = null;\n    localStorage.removeItem(\"current_member_id\");\n    localStorage.removeItem(\"current_member_encrypted_password\");  \n    this.temp_member = null\n    this.temp_ticket= null;\n    this.reloadBS(null);\n  }\n\n  populateContest(data)\n  {\n      this.currentContest= data;\n      this.currentContest_bs.next(data);\n  }\n\n  populatePreviousContest(data)\n  {\n      this.previousContest= data;\n      this.previousContest_bs.next(data);\n  }\n\n  addAlert(alert_ticket:AlertTicket)\n  {\n      var type:Type ;\n      switch (alert_ticket.type) {\n        case \"success\":\n            type= this.types.success\n          break;\n        case \"info\":\n          type= this.types.info\n        break;\n        case \"warning\":\n          type= this.types.warning\n        break;\n        case \"danger\":\n          type= this.types.danger\n        break;\n      \n        default:\n          break;\n      }\n      \n      var alert:IAlert = {\n        id: this.count,\n        message:alert_ticket.msg,\n        strong:type.strong,\n        icon:type.icon,\n        type:alert_ticket.type\n      };\n      this.alerts.push(alert);\n      setTimeout(\n        ()=>\n        {\n          this.closeAlert(alert);\n        },\n        this.popup\n      );\n  }\n\n  closeAlert(alert: IAlert) {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Ticket } from '../interfaces/ticket';\nimport { backendUrl } from '../constants/app.constant';\nimport { Member } from '../models/member';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  constructor(private http:HttpClient) { }\n\n  login(ticket:Ticket)\n  {\n      return this.http.post(backendUrl+\"login\",ticket);\n  }\n  generateCode(mem:Member)\n  {\n     return this.http.post(backendUrl+\"generateCode\",mem);\n  }\n  authenticate(ticket:Ticket)\n  {\n      return this.http.post(backendUrl+\"authenticateCode\",ticket);\n  }\n  getContest()\n  {\n    return this.http.get(backendUrl+\"getContest\");\n  }\n  getPreviousContest()\n  {\n    return this.http.get(backendUrl+\"getPreviousContest\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { isSmallScreen } from '../constants/app.constant';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\ndeclare var jQuery: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UIService {\r\n\r\n  private closeResult: string;\r\n\r\n  constructor(private modalService: NgbModal) {\r\n\r\n  }\r\n\r\n  container_or_fluid() {\r\n    if (isSmallScreen) return \"container-fluid\"\r\n    return \"container\"\r\n  }\r\n\r\n  open(content, type, modalDimension) {\r\n    if (modalDimension === 'sm' && type === 'modal_mini') {\r\n      this.modalService.open(content, { windowClass: 'modal-mini', size: 'sm', centered: true }).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      });\r\n    } else if (modalDimension === '' && type === 'Notification') {\r\n      this.modalService.open(content, { windowClass: 'modal-danger', centered: true }).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      });\r\n    } else {\r\n      this.modalService.open(content, { centered: true }).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      });\r\n    }\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n  auto_size_text_area() {\r\n    // auto hieght for ttextareas\r\n    (function ($) {\r\n      $('.textarea').each(function () {\r\n      }).on('input', function () {\r\n        this.style.height = 'auto';\r\n        this.style.height = (this.scrollHeight) + 'px';\r\n      });\r\n      $('.textarea').each(function () {\r\n      }).on(\"blur\", function () {\r\n        this.style.height = 'auto';\r\n      });\r\n      $('.textarea').each(function () {\r\n      }).on(\"focus\", function () {\r\n        this.style.height = 'auto';\r\n        this.style.height = (this.scrollHeight) + 'px';\r\n      });\r\n\r\n    })(jQuery);\r\n\r\n  }\r\n\r\n  upload_button() {\r\n\r\n    const inputs = document.getElementsByClassName(\"target_input\");\r\n    const buttons = document.getElementsByClassName(\"button_upload\");\r\n\r\n\r\n    if (buttons.length == inputs.length) {\r\n      var pairs = [];\r\n\r\n      for (var i = 0; i < buttons.length; i++) {\r\n        pairs.push(\r\n          {\r\n            button: buttons[i],\r\n            input: inputs[i],\r\n          }\r\n        )\r\n      }\r\n\r\n      pairs.forEach(pair => {\r\n        pair.button.addEventListener('click', function () {\r\n          var ele = pair.input as HTMLElement;\r\n          ele.click();\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  dismissAll() {\r\n    this.modalService.dismissAll();\r\n         }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}