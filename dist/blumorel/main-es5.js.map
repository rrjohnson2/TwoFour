{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/coming-soon/coming-soon.component.ts","webpack:///src/app/coming-soon/coming-soon.component.html","webpack:///src/app/coming-soon/coming-soon.service.ts","webpack:///src/app/constants/app.constant.ts","webpack:///src/app/constants/error.state.matches.ts","webpack:///src/app/layout/admin.auth.guard.ts","webpack:///src/app/layout/admin/admin.component.ts","webpack:///src/app/layout/admin/admin.component.html","webpack:///src/app/layout/admin/admin.service.ts","webpack:///src/app/layout/alert-manager/alert-manager.component.ts","webpack:///src/app/layout/alert-manager/alert-manager.component.html","webpack:///src/app/layout/auth.guard.ts","webpack:///src/app/layout/bit-content/bit-content.component.ts","webpack:///src/app/layout/bit-content/bit-content.component.html","webpack:///src/app/layout/footer/footer.component.ts","webpack:///src/app/layout/footer/footer.component.html","webpack:///src/app/layout/four-digit-code/four-digit-code.component.ts","webpack:///src/app/layout/four-digit-code/four-digit-code.component.html","webpack:///src/app/layout/home/countdown/countdown.component.ts","webpack:///src/app/layout/home/countdown/countdown.component.html","webpack:///src/app/layout/home/home.component.ts","webpack:///src/app/layout/home/home.component.html","webpack:///src/app/layout/home/home.service.ts","webpack:///src/app/layout/home/submit-modal/submit-modal.component.ts","webpack:///src/app/layout/home/submit-modal/submit-modal.component.html","webpack:///src/app/layout/home/submit-modal/submit-modal.service.ts","webpack:///src/app/layout/layout-routing.module.ts","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/layout/layout.module.ts","webpack:///src/app/layout/loader/loader.component.ts","webpack:///src/app/layout/loader/loader.component.html","webpack:///src/app/layout/loader/loader.service.ts","webpack:///src/app/layout/loader/loaderintercept.service.ts","webpack:///src/app/layout/login/login.component.ts","webpack:///src/app/layout/login/login.component.html","webpack:///src/app/layout/reverse.auth.guard.ts","webpack:///src/app/layout/signup/signup.component.ts","webpack:///src/app/layout/signup/signup.component.html","webpack:///src/app/layout/update/update.component.ts","webpack:///src/app/layout/update/update.component.html","webpack:///src/app/layout/update/update.service.ts","webpack:///src/app/layout/welcome/welcome.component.ts","webpack:///src/app/layout/welcome/welcome.component.html","webpack:///src/app/models/member.ts","webpack:///src/app/pipe/count-time.pipe.ts","webpack:///src/app/pipe/safe-html.pipe.ts","webpack:///src/app/service/app-variables.service.ts","webpack:///src/app/service/global.service.ts","webpack:///src/app/service/ui.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","ComingSoonComponent","soonServirce","player","document","getElementById","emailForm","email","required","loop","blumorel","slider","volume","value","get","res","seed","reason","addToMailList","subscribe","data","msg","reset","error","submit","ComingSoonService","http","post","providedIn","isSmallScreen","window","screen","width","backendUrl","image_server_url","seedUrl","Actions","MyErrorStateMatcher","control","form","invalidCtrl","invalid","parent","dirty","invalidParent","AdminAuthGuard","router","appVariables","current_member","role","navigate","AdminComponent","variables","adminS","homeServ","facebook","instagram","twitter","isLinear","getWinner","renderSrc","subToEntry","backup","sub","url","content_url","type","content_type","description","member","extension","content_extension","getSubmission","file","URL","createObjectURL","approveWinner","alert_ticket","action_attempted","addAlert","forceWinner","AdminService","AlertManagerComponent","variable","alerts","alerts_ob","alert","closeAlert","AuthGuard","localStorage","getItem","BitContentComponent","placeholder","bit","src","match","FooterComponent","year","Date","getFullYear","FourDigitCodeComponent","appvariables","glob","createForm","codeForm","minLength","maxLength","ticket","mem","temp_member","authenticate","fillMember","temp_ticket","authenicateCode","generateCode","resendCode","CountdownComponent","reload","emit","HomeComponent","homeService","today","hours_to_secs_24","init","currentContest_ob","contest","previousWinner_ob","previousWinner","populateBit","event","post_count","reloadBS","getPreviousWinner","populatePreviousWinner","currrentContest","getContest","populateContest","bitComp","console","log","setTimeout","nextContest","HomeService","headers","responseType","params","content","SubmitModalComponent","uiService","submitService","auto_size_text_area","upload_button","submission","current_member_ob","submitForm","filename","content_file","FileNew","File","uploadSubmission","old_file","target","files","name","split","pop","setup","fileChangeEvent","SubmitModalService","formData","FormData","append","children","canActivate","LayoutRoutingModule","forChild","LayoutComponent","ui","init_boolean","getMember","sidenav","opened","close","open","thing","logOff","container_or_fluid","toggle","onActivate","LayoutModule","LoaderComponent","loaderServe","loaderOB","show","LoaderService","loader","loaderBS","asObservable","choice","next","LoaderinterceptService","showOrHide","handle","pipe","err","LoginComponent","initForm","loginForm","email_phone_username","password","valid","login","signUp","ReverseAuthGuard","SignupComponent","matcher","email_regex","phoneno","signUpForm","username","email_phone","password_check","newsletter","notify","validators","checkPasswords","messageMedium","email_or_phone","choice_id","phone","signup","group","pass","confirmPass","notSame","emailPhone","length","UpdateComponent","uiserve","updateServe","usernameForm","confirm","confirming","phoneForm","pattern","min","facebookForm","twitterForm","instagramForm","passwordForm","old_password","noticeForm","modal","temp","verified","updatePassword","toLocaleUpperCase","cancel","message","update","c","dismissAll","choose","UpdateService","WelcomeComponent","Member","CountTimePipe","intervals","val","place","time","amount","Math","floor","push","i","undefined","SafeHtmlPipe","sanitizer","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","AppVariablesService","current_member_id","current_member_encrypted_password","current_member_bs","currentContest_bs","currentContest","previousWinner_bs","alerts_bs","count","popup","types","success","icon","strong","danger","info","warning","decrypt","reload_contest","setItem","encrypt","removeItem","splice","indexOf","GlobalService","UIService","modalService","modalDimension","windowClass","size","centered","result","closeResult","getDismissReason","ESC","BACKDROP_CLICK","$","each","on","style","height","scrollHeight","jQuery","inputs","getElementsByClassName","buttons","pairs","button","input","forEach","pair","addEventListener","ele","click","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LayoutModule } from './layout/layout.module';\r\nimport { ComingSoonComponent } from './coming-soon/coming-soon.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'layout', loadChildren: () => LayoutModule },\r\n  { path: 'commingsoon', component: ComingSoonComponent},\r\n  { path: '', redirectTo:'commingsoon', pathMatch:'prefix'},\r\n  { path: '**', redirectTo:'commingsoon', pathMatch:'prefix'},\r\n]; \r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'blumorel';\r\n}\r\n","<router-outlet></router-outlet>\r\n<!--  -->","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { LoaderinterceptService } from './layout/loader/loaderintercept.service';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { ComingSoonComponent } from './coming-soon/coming-soon.component';\r\nimport {MatSliderModule, MatSlider} from '@angular/material/slider';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ComingSoonComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatSliderModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS,\r\n      useClass: LoaderinterceptService,\r\n      multi: true},\r\n    {provide: LocationStrategy, useClass: HashLocationStrategy}\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, EventEmitter } from '@angular/core';\nimport { MatSlider, MatSliderChange } from '@angular/material/slider';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ComingSoonService } from './coming-soon.service';\n\n@Component({\n  selector: 'app-coming-soon',\n  templateUrl: './coming-soon.component.html',\n  styleUrls: ['./coming-soon.component.scss']\n})\nexport class ComingSoonComponent implements OnInit, AfterViewInit {\n\n  player: HTMLAudioElement;\n  emailForm: FormGroup;\n  msg: string;\n  constructor(private soonServirce: ComingSoonService) { }\n\n  ngAfterViewInit(): void {\n    this.player = <HTMLAudioElement>document.getElementById(\"audioplayer\");\n  }\n\n  ngOnInit(): void {\n\n    this.emailForm = new FormGroup(\n      {\n        email: new FormControl(null, Validators.required),\n        loop: new FormControl(true),\n        blumorel: new FormControl(true)\n      }\n    )\n  }\n  volume(slider: MatSliderChange) {\n\n    this.player.volume = slider.value / 100;\n  }\n  submit() {\n    let loop = this.emailForm.get(\"loop\").value;\n    let blumorel = this.emailForm.get(\"blumorel\").value;\n    let res = \"both\";\n\n    if (loop && !blumorel) {\n      res = \"loop\"\n    }\n    if (blumorel && !loop) {\n      res = \"blumorel\";\n    }\n    var seed: SeedMember = {\n      email: this.emailForm.get(\"email\").value,\n      reason: res\n    }\n\n    this.soonServirce.addToMailList(seed).subscribe(\n      data => {\n        this.msg = \"\";\n        this.emailForm.reset();\n      },\n\n      error => {\n        this.msg = \"Something Wnet Wrong Try Again\";\n      }\n    )\n  }\n\n\n}\n\nexport interface SeedMember {\n  email: string,\n  reason: string;\n}\n","<img class=\"background\" src=\"../../assets/images/background.jpg\" alt=\"background\">\n\n<div>\n    <div class=\"row justify-content-center\">\n        <div class=\" coming_soon_block col-8 text-center\">\n            <h1>Comming Soon</h1>\n        </div>\n\n        <div class=\" coming_soon_block col-8 text-center\">\n            <audio id=\"audioplayer\" src=\"../../assets/music/background.mp3\" autoplay controls muted loop></audio>\n            <small>Volume</small>\n            <mat-slider #slider (change)=\"volume($event)\" [value]=\"100\" color=\"primary\"></mat-slider>\n        </div>\n\n        <div class=\"col-8\">\n            <div class=\"row justify-content-center\">\n                <div class=\"col-lg-6 col-sm-8\">\n                    <div class=\"card \">\n                        <div class=\" text-center card-header\">\n                            <img class=\"logo_img\" src=\"../../assets/icons/loop.png\" alt=\"Logo\">\n                            <div class=\"card-body\">\n                                Loop is the first free web appication that allows users\n                                to get contructive feedback on their work\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-6 col-sm-8\">\n                    <div class=\"card\">\n                        <div class=\" text-center card-header\">\n                            <img class=\"logo_img\" src=\"../../assets/icons/blu morel.png\" alt=\"Logo\">\n                            <div class=\"card-body\">\n                                Blu Morel is the first free showcase raffle, where a luck post is selected every day to\n                                be the daily showcase\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"coming_soon_block col-8 text-center \" style=\"margin-top: 10px\">\n            <form [formGroup]=\"emailForm\" (ngSubmit)=\"submit()\">\n                <input type=\"email\" formControlName=\"email\" placeholder=\"Enter Email\">\n\n                <fieldset>\n                    <label for=\"\">Loop </label>\n                    <input type=\"checkbox\" formControlName=\"loop\">\n\n                    <br>\n\n                    <label for=\"blumorel\">Blu Morel</label>\n                    <input id=\"blumorel\" type=\"checkbox\" formControlName=\"blumorel\">\n                </fieldset>\n\n                <button *ngIf=\"emailForm.valid\">Notify</button>\n                <button *ngIf=\"emailForm.invalid\" disabled>Notify</button>\n            </form>\n\n        </div>\n\n\n\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SeedMember } from './coming-soon.component';\nimport { seedUrl } from '../constants/app.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComingSoonService {\n\n  constructor(private http: HttpClient) { }\n\n  addToMailList(seed: SeedMember) {\n    return this.http.post(\n      seedUrl + \"addToMailList\",\n      seed\n    );\n  }\n}\n","\r\n\r\nexport var isSmallScreen = window.screen.width < 992;\r\n\r\nexport var backendUrl = 'https://blumorel-backend.herokuapp.com/'\r\n// export var backendUrl = \"http://localhost:5000/\"\r\n\r\nexport var image_server_url = 'https://app-loop-content-server.herokuapp.com/'\r\n//export var image_server_url = \"http://localhost:8082/\"\r\n\r\nexport var seedUrl = 'https://seed-app-api.herokuapp.com/'\r\n// export var seedUrl = \"http://localhost:8080/\"\r\n\r\nexport enum Actions {\r\n  logOff,\r\n  login,\r\n  signup,\r\n  submit,\r\n  generateCode,\r\n  authenicateCode,\r\n  currrentContest,\r\n  previousContest\r\n}  ","import { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n      const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n      const invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);\r\n  \r\n      return (invalidCtrl || invalidParent);\r\n    }\r\n  }","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AppVariablesService } from '../service/app-variables.service';\r\n\r\n@Injectable()\r\nexport class AdminAuthGuard implements CanActivate {\r\n  path: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n  route: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router, private appVariables: AppVariablesService) { }\r\n\r\n  canActivate() {\r\n    if (this.appVariables.current_member !=null &&  this.appVariables.current_member.role != \"admin\") {\r\n\r\n      this.router.navigate(['/layout/home']);\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\r\nimport { Member } from 'src/app/models/member';\r\nimport { Submission } from 'src/app/interfaces/submission';\r\nimport { Actions } from 'src/app/constants/app.constant';\r\nimport { faFacebook, faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons';\r\nimport { AdminService } from './admin.service';\r\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\r\nimport { HomeService } from '../home/home.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  facebook = faFacebook;\r\n  instagram = faInstagram;\r\n  twitter = faTwitter;\r\n  isLinear = false;\r\n  sub;\r\n  constructor(private variables: AppVariablesService,\r\n     private adminS: AdminService,\r\n      private homeServ: HomeService,\r\n      ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.adminS.getWinner().subscribe(\r\n      data => {\r\n        this.renderSrc(this.subToEntry(<any>data))\r\n      }\r\n    );\r\n  }\r\n  subToEntry(backup: Submission): any {\r\n    let sub: Entry = {\r\n      url: backup.content_url,\r\n      type: backup.content_type,\r\n      description: backup.description,\r\n      member: backup.member,\r\n      extension: backup.content_extension\r\n    }\r\n    return sub;\r\n  }\r\n\r\n  renderSrc(sub: Entry) {\r\n   if(sub.url) \r\n   {\r\n     this.homeServ.getSubmission(sub.url+sub.extension).subscribe(\r\n      data => {\r\n       sub.file = URL.createObjectURL(data);\r\n       this.sub = sub\r\n      },\r\n      error =>{\r\n          sub.type ='image';\r\n          sub.file = \"assets/icons/failed.jpg\"\r\n          this.sub=sub;\r\n      }\r\n    )\r\n   }\r\n   else{\r\n     this.sub = sub;\r\n   }\r\n    \r\n  }\r\n  approveWinner() {\r\n    this.adminS.approveWinner().subscribe(\r\n      data =>\r\n      {\r\n        var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'Selected', type: 'success' };\r\n\r\n        this.variables.addAlert(alert_ticket);\r\n      }\r\n    )\r\n  }\r\n\r\n  forceWinner(){\r\n    this.adminS.forceWinner().subscribe(\r\n      data =>{\r\n        this.renderSrc(this.subToEntry(<any>data));\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n}\r\nexport interface Entry {\r\n  description: string;\r\n  member: Member;\r\n  url: string;\r\n  type: string,\r\n  file?: any,\r\n  extension:string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<div class=\"row justify-content-center two_four_card_holder\">\r\n    <div class=\"col-lg-6 col-sm-12 sm_reduce_col_12_padding\">\r\n        <div *ngIf=\"sub\" class=\"card admin_card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <app-bit-content [type]=\"sub.type\" [src]=\"sub.file\"></app-bit-content>\r\n                    </div>\r\n\r\n                    <div class=\"col-12\">\r\n                        <p>{{sub.description}}\r\n                            <mat-chip *ngIf=\"sub.winner\">Winner</mat-chip>\r\n                            <button mat-mini-fab color=\"primary\" (click)=\"approveWinner()\">\r\n                                <mat-icon>check</mat-icon>\r\n                            </button>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <mat-accordion>\r\n                            <mat-expansion-panel>\r\n                                <mat-expansion-panel-header>\r\n                                    <mat-panel-title>\r\n                                        <mat-icon>account_circle</mat-icon>\r\n                                        <strong>{{sub.member.username}}</strong>\r\n                                    </mat-panel-title>\r\n                                </mat-expansion-panel-header>\r\n\r\n                                <mat-selection-list [multiple]=\"false\">\r\n                                    <mat-list-option>\r\n                                        <a mat-list-item target=\"_blank\"\r\n                                            href=\"https://facebook.com/{{sub.member.facebook}}\">\r\n                                            <fa-icon [icon]=\"facebook\" size=\"lg\"></fa-icon>\r\n                                            <strong>{{sub.member.facebook}}</strong>\r\n                                        </a>\r\n                                    </mat-list-option>\r\n                                    <mat-list-option>\r\n                                        <a mat-list-item target=\"_blank\"\r\n                                            href=\"https://instagram.com/{{sub.member.instagram}}\">\r\n                                            <fa-icon class=\"instagram\" [icon]=\"instagram\" size=\"lg\"></fa-icon>\r\n                                            <strong>{{sub.member.twitter}}</strong>\r\n                                        </a>\r\n                                    </mat-list-option>\r\n                                    <mat-list-option>\r\n                                        <a mat-list-item target=\"_blank\"\r\n                                            href=\"https://twitter.com/{{sub.member.twitter}}\">\r\n                                            <fa-icon [icon]=\"twitter\" size=\"lg\"></fa-icon>\r\n                                            <strong>{{sub.member.instagram}}</strong>\r\n                                        </a>\r\n                                    </mat-list-option>\r\n                                </mat-selection-list>\r\n                            </mat-expansion-panel>\r\n                        </mat-accordion>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\" row \">\r\n                    <div class=\"col-12\">\r\n                        <button (click)=\"forceWinner()\" mat-raised-button color=\"primary\" class=\"long_12_button\">Force Winner</button>\r\n                    </div>\r\n                    <div *ngIf=\"!sub\" class=\"col-12\">\r\n                        <button (click)=\"approveWinner()\" mat-raised-button color=\"primary\" class=\"long_12_button\">Skip Winner</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { backendUrl } from 'src/app/constants/app.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http : HttpClient) { }\n\n\n  approveWinner()\n  {\n    return this.http.get(backendUrl+\"approveWinner\");\n  }\n  getWinner()\n  {\n    return this.http.get(backendUrl+\"getWinner\");\n  }\n  forceWinner()\n  {\n    return this.http.get(backendUrl+\"forceWinner\");\n  }\n  \n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\n\n@Component({\n  selector: 'app-alert-manager',\n  templateUrl: './alert-manager.component.html',\n  styleUrls: ['./alert-manager.component.scss']\n})\nexport class AlertManagerComponent implements OnInit {\n\n  \n  @Input()\n  public alerts: Array<IAlert> = [];\n  \n\n  ngOnInit(): void {\n    this.variable.alerts_ob.subscribe(data=>{\n      this.alerts = data;\n    })\n  }\n  constructor(private variable:AppVariablesService) {\n      \n  }\n\n  close(alert: IAlert) {\n    this.variable.closeAlert(alert)\n  }\n  \n}\n\nexport interface IAlert {\n  id: number;\n  type: string;\n  strong?: string;\n  message: string;\n  icon?: string;\n}\n\nexport interface Type {\n  strong?: string;\n  icon?: string;\n}\n\n","<div class=\"alerts\">\n    <div class=\"alert\"  *ngFor=\"let alert of alerts\">\n        <ngb-alert [type]=\"alert.type\"  [dismissible]=\"true\"  (close)=\"close(alert)\" >\n          <ng-container *ngIf=\"alert.icon\">\n            <div class=\"alert-inner--icon\">\n                <i class=\"{{alert.icon}}\"></i>\n            </div>\n          </ng-container>\n          <span class=\"alert-inner--text\">  <strong>{{alert.strong}} </strong>{{ alert.message }}</span>\n        </ngb-alert>\n      </div>\n</div>\n","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AppVariablesService } from '../service/app-variables.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  path: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n  route: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router,private appVariables:AppVariablesService) { }\r\n\r\n  canActivate() {\r\n    if(this.appVariables.current_member==null && localStorage.getItem(\"current_member_id\") ==null)\r\n    {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-bit-content',\r\n  templateUrl: './bit-content.component.html',\r\n  styleUrls: ['./bit-content.component.sass']\r\n})\r\nexport class BitContentComponent implements OnInit {\r\n\r\n   @Input()type;\r\n   @Input()src;\r\n\r\n   @Input()placeholder=false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  init(bit)\r\n  {\r\n    if(bit ==null)\r\n    {\r\n      this.src = null;\r\n      this.type= null;\r\n    }\r\n    else{\r\n      this.type = bit.type;\r\n      this.src= URL.createObjectURL(bit)\r\n    };\r\n\r\n  }\r\n\r\n  render_type(type:string)\r\n  {\r\n    if(type.match(\"image\")) return 'image';\r\n    else if(type.match(\"video\")) return 'video';\r\n    else if(type.match(\"audio\")) return 'audio';\r\n\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"src !=null;else welcome\">\r\n  <div *ngIf=\"render_type(type) == 'image';else video\">\r\n    <img class=\"preview\" [src]=\"src | safeHtml: 'resourceUrl'\" >\r\n  </div>\r\n  \r\n  <ng-template #video>\r\n    <div *ngIf=\"render_type(type) =='video';else audio\">\r\n      <video class=\"preview\" [src]=\"src | safeHtml: 'resourceUrl'\"  controls></video>\r\n    </div>\r\n  </ng-template>\r\n  \r\n  <ng-template #audio>\r\n    <div *ngIf=\"render_type(type) =='audio'\">\r\n      <audio class=\"preview\" controls [src]=\"src | safeHtml: 'resourceUrl'\" >\r\n        </audio>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n<ng-template #welcome>\r\n  <video *ngIf=\"!placeholder\" class=\"preview\" src=\"assets/video/placeholder.mp4\" controls></video>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  year = new Date().getFullYear();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer\">\r\n      <!-- Copyright -->\r\n  <div class=\"footer-copyright text-center  mat-toolbar-a\">\r\n    <a href=\"http://loop4feedback.com\" target=\"blank\">\r\n      <img class=\"logo_img\" src=\"assets/icons/loop.png\" alt=\"Logo\">\r\n    </a><br>\r\n    Blu Morel Viral &#169; {{year}}\r\n  </div>\r\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { GlobalService } from 'src/app/service/global.service';\nimport { Ticket } from 'src/app/interfaces/ticket';\nimport { Router } from '@angular/router';\nimport { Actions } from 'src/app/constants/app.constant';\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\n\n@Component({\n  selector: 'app-four-digit-code',\n  templateUrl: './four-digit-code.component.html',\n  styleUrls: ['./four-digit-code.component.scss']\n})\nexport class FourDigitCodeComponent implements OnInit {\n\n  constructor(private router:Router, private appvariables:AppVariablesService, private glob:GlobalService) { }\n\n  codeForm:FormGroup;\n  ngOnInit(): void {\n    this.createForm()\n  }\n  createForm()\n  {\n    this.codeForm = new FormGroup({\n      code:new FormControl(null,[Validators.required,Validators.minLength(6),Validators.maxLength(6)])\n    });\n  }\n  submit(){\n      var ticket:Ticket={\n        data:{\n          mem: this.appvariables.temp_member,\n          code:this.codeForm.get(\"code\").value\n        }\n      }\n\n      this.glob.authenticate(ticket).subscribe(data=>{\n        this.appvariables.fillMember(this.appvariables.temp_member,this.appvariables.temp_ticket);\n        this.router.navigate(['/layout/home'])\n        var alert_ticket:AlertTicket= {action_attempted:Actions.authenicateCode,msg:'Authenicate Code Success',type:'success'};\n\n        this.appvariables.addAlert(alert_ticket);\n      },\n      error=>\n      {\n        var alert_ticket:AlertTicket= {action_attempted:Actions.authenicateCode,msg:'Could not Authenicate Code',type:'danger'};\n\n        this.appvariables.addAlert(alert_ticket);\n      })\n  }\n  resendCode()\n  {\n    this.glob.generateCode(this.appvariables.temp_member).subscribe(\n      data=>\n      {\n        var alert_ticket:AlertTicket= {action_attempted:Actions.authenicateCode,msg:'Code Generated',type:'success'};\n\n        this.appvariables.addAlert(alert_ticket);\n      },\n      error =>{\n        var alert_ticket:AlertTicket= {action_attempted:Actions.authenicateCode,msg:'Could not Generate Code',type:'danger'};\n\n        this.appvariables.addAlert(alert_ticket);\n      }\n    )\n  }\n}\n","<div class=\"row justify-content-center two_four_card_holder\">\n    <div class=\"col-lg-6 col-sm-12 sm_reduce_col_12_padding\">\n        <div class=\"card two_four_card\">\n            <form [formGroup]=\"codeForm\" (ngSubmit)=\"submit()\">\n\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <fieldset class=\"col-12\">\n                            <input matInput class=\"form-control\" placeholder=\"Enter Code Check Email or Phone\"\n                                formControlName=\"code\" type=\"number\">\n                        </fieldset>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12 text-center\">\n                            <button type=\"submit\" mat-raised-button color=\"primary\">Submit Code</button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12 text-center\">\n                            <a (click)=\"resendCode()\" color=\"accent\">\n                                <small>Resend Code</small>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {  faFacebook, faTwitter,faInstagram } from '@fortawesome/free-brands-svg-icons';\n\n\n@Component({\n  selector: 'app-countdown',\n  templateUrl: './countdown.component.html',\n  styleUrls: ['./countdown.component.scss']\n})\nexport class CountdownComponent implements OnInit {\n\n  @Input() time:Date;\n  @Input() progress;\n  @Input() subs;\n  @Input() winner;\n  @Input() description;\n  facebook = faFacebook;\n  instagram = faInstagram;\n  twitter = faTwitter;\n  @Output() reload:EventEmitter<any> = new EventEmitter<any>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  refresh_contest(){\n    this.reload.emit(null);\n  }\n\n\n}\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"row\">\r\n            <div class=\"col-8\">\r\n                <a matTooltip=\"Contest End\" [matTooltipPosition]=\"'after'\" #tooltiptime=\"matTooltip\"\r\n                    (click)=\"tooltiptime.toggle()\">\r\n                    <button class=\"long_12_button \" mat-raised-button color=\"accent\">\r\n                        {{time | date:'short'}} EST\r\n                    </button>\r\n                </a>\r\n\r\n            </div>\r\n            <div class=\"col-4\">\r\n                <a matTooltip=\"Submission Count\" [matTooltipPosition]=\"'after'\" #tooltip=\"matTooltip\"\r\n                    (click)=\"tooltip.toggle()\">\r\n                    <button class=\"long_12_button \" mat-raised-button color=\"accent\">\r\n                        {{subs}}\r\n                    </button>\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"row\">\r\n            <div *ngIf=\"winner!=null ;else welcome\">\r\n                <div class=\"col-12\">\r\n                    <p>{{description}}\r\n                        <mat-chip-list>\r\n                            <mat-chip>\r\n                                <a mat-list-item target=\"_blank\" href=\"https://facebook.com/{{winner.facebook}}\">\r\n                                    <fa-icon [icon]=\"facebook\" size=\"lg\"></fa-icon>\r\n                                    <strong>{{winner.facebook}}</strong>\r\n                                </a>\r\n                            </mat-chip>\r\n                            <mat-chip>\r\n                                <a mat-list-item target=\"_blank\"\r\n                                    href=\"https://instagram.com/{{winner.instagram}}\">\r\n                                    <fa-icon [icon]=\"instagram\" size=\"lg\"></fa-icon>\r\n                                    <strong>{{winner.twitter}}</strong>\r\n                                </a>\r\n                            </mat-chip>\r\n                            <mat-chip>\r\n                                <a mat-list-item target=\"_blank\" href=\"https://twitter.com/{{winner.twitter}}\">\r\n                                    <fa-icon [icon]=\"twitter\" size=\"lg\"></fa-icon>\r\n                                    <strong>{{winner.instagram}}</strong>\r\n                                </a></mat-chip>\r\n                        </mat-chip-list>\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <ng-template #welcome>\r\n            <p>\r\n                Be the first to submit a post.\r\n            </p>\r\n        </ng-template>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\r\nimport { Contest } from 'src/app/models/contest';\r\nimport { GlobalService } from 'src/app/service/global.service';\r\nimport { SubmitModalComponent } from './submit-modal/submit-modal.component';\r\nimport { Actions } from 'src/app/constants/app.constant';\r\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\r\nimport { BitContentComponent } from '../bit-content/bit-content.component';\r\nimport { HomeService } from './home.service';\r\nimport { Submission } from 'src/app/interfaces/submission';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild(SubmitModalComponent) submit: SubmitModalComponent;\r\n  @ViewChild(BitContentComponent) bitComp: BitContentComponent\r\n  contest: Contest;\r\n  previousWinner: Submission;\r\n  today: Date = new Date();\r\n  hours_to_secs_24: number = 86400;\r\n  constructor(private variables: AppVariablesService, private glob: GlobalService, private homeService: HomeService) { }\r\n  ngAfterViewInit(): void {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n\r\n  }\r\n  init() {\r\n    this.variables.currentContest_ob.subscribe(data => {\r\n      this.contest = data\r\n    });\r\n    this.variables.previousWinner_ob.subscribe(data => {\r\n      this.previousWinner = data;\r\n      this.populateBit(<Submission>data);\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  nextContest(event) {\r\n    this.variables.current_member.post_count = 0;\r\n    this.variables.reloadBS(this.variables.current_member);\r\n\r\n    this.glob.getPreviousWinner().subscribe(data => { this.variables.populatePreviousWinner(data) },\r\n      error => {\r\n        var alert_ticket: AlertTicket = { action_attempted: Actions.currrentContest, msg: 'Could Load Current Contest', type: 'danger' };\r\n\r\n        this.variables.addAlert(alert_ticket)\r\n      });\r\n\r\n\r\n    this.glob.getContest().subscribe(\r\n      data => { this.variables.populateContest(data) },\r\n      error => {\r\n        var alert_ticket: AlertTicket = { action_attempted: Actions.currrentContest, msg: 'Could Load Prev Contest', type: 'danger' };\r\n\r\n        this.variables.addAlert(alert_ticket)\r\n      })\r\n\r\n\r\n  }\r\n  populateBit(data: Submission) {\r\n    if (data != null && data.content_url != null) {\r\n      if (this.bitComp != null) {\r\n        this.bitComp.type = data.content_type;\r\n        this.homeService.getSubmission(data.content_url+ data.content_extension).subscribe(\r\n          data => {\r\n            this.bitComp.src = URL.createObjectURL(data);\r\n          }, error => {\r\n            console.log(error)\r\n            this.bitComp.type = 'image';\r\n            this.bitComp.src = 'assets/icons/failed.jpg';\r\n          }\r\n        )\r\n      }\r\n      else {\r\n        setTimeout(() => {\r\n          this.populateBit(data);\r\n        }, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row justify-content-center two_four_card_holder\">\r\n    <div class=\"col-lg-8 col-sm-12 sm_reduce_col_12_padding \">\r\n        <div class=\"card \">\r\n            <div class=\"card-body\">\r\n\r\n               \r\n                <div class=\"row needs_margin_bottom \">\r\n                    <div class=\"col-lg-6\">\r\n                        <app-bit-content></app-bit-content>\r\n                    </div>\r\n                    <div class=\" col-lg-6 col-sm-12\">\r\n                        <app-countdown (reload)=\"nextContest($event)\"\r\n                            [description]=\"previousWinner?.description\" [winner]=\"previousWinner?.member\"\r\n                            [subs]=\"contest?.sub_count\" [time]=\"contest?.calendar\"></app-countdown>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                    <div class=\"col-12 needs_margin_bottom \">\r\n                        <button class=\"long_12_button\" mat-raised-button color=\"primary\"\r\n                            routerLink=\"/layout/submit\">Submit Lottery</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"col-lg-4 col-sm-12 sm_reduce_col_12_padding\">\r\n        <div class=\"card welcome_card \">\r\n            <div class=\"card-body\">\r\n                <p>\r\n                    Welcome to Blu Morel, the first and only online showcase lottery.\r\n                    Users can submit a video, photo, and/or a status.\r\n                    Every day a user's submission is chosen at random.\r\n                    The chosen submission will be featured on the site for 24 hours,\r\n                    during which the next lottery will be running for the following day.\r\n                    One submission per lottery, and once the winner is picked, all users will be notified via text or\r\n                    email.\r\n                    So sign up, submit,and good luck.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { image_server_url } from 'src/app/constants/app.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getSubmission(sub: string) {\n    \n    return this.http.get(`${image_server_url}download`, {\n      headers: { 'Content-type': 'application/json' },\n      responseType:'blob', \n      params: { content: sub } \n    });\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { Member } from 'src/app/models/member';\nimport { Router } from '@angular/router';\nimport { UIService } from 'src/app/service/ui.service';\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Submission } from 'src/app/interfaces/submission';\nimport { BitContentComponent } from '../../bit-content/bit-content.component';\nimport { SubmitModalService } from './submit-modal.service';\nimport { SubmissionTicket } from 'src/app/models/submission-ticket';\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\nimport { Actions } from 'src/app/constants/app.constant';\n\n@Component({\n  selector: 'app-submit-modal',\n  templateUrl: './submit-modal.component.html',\n  styleUrls: ['./submit-modal.component.scss']\n})\nexport class SubmitModalComponent implements OnInit, AfterViewInit {\n\n  member: Member;\n  @ViewChild('classic1') modal: ElementRef;\n  @ViewChild(BitContentComponent) bitComp: BitContentComponent;\n\n  submitForm: FormGroup;\n  submission: Submission;\n  content_file: File;\n  extension: string;\n\n  constructor(private router: Router, private uiService: UIService,\n    private variables: AppVariablesService,\n    private submitService: SubmitModalService\n  ) { }\n  ngAfterViewInit(): void {\n    this.uiService.auto_size_text_area();\n    this.uiService.upload_button();\n    this.submission = {\n      content_extension: null,\n      content_type: null,\n      content_url: null,\n      description: null,\n      member: this.member,\n    };\n  }\n\n  ngOnInit(): void {\n    this.variables.current_member_ob.subscribe(data => this.member = data);\n\n    this.createForm();\n\n  }\n  createForm() {\n    this.submitForm = new FormGroup({\n      description: new FormControl(null, [Validators.required])\n    })\n  }\n  submit() {\n    this.submission.description = this.submitForm.get(\"description\").value;\n    this.submitService.submit(this.submission).subscribe(\n      data => {\n        var filename: string = <string>data;\n        if (filename != null && this.content_file !=null) {\n          var FileNew: File = new File([this.content_file], filename +this.submission.content_extension, { type: this.content_file.type });\n          this.submitService.uploadSubmission(FileNew).subscribe(\n            data => {\n              var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'File Uploaded', type: 'success' };\n\n              this.variables.addAlert(alert_ticket);\n            },\n            error => {\n              var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'Could Not Submit File', type: 'danger' };\n\n              this.variables.addAlert(alert_ticket);\n            }\n          );\n        }\n          var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'Post Uploaded', type: 'success' };\n\n          this.variables.addAlert(alert_ticket);\n          this.router.navigate(['/layout/home']);\n          this.submitForm.reset();\n\n\n\n      },\n      error => {\n        console.log(error)\n        var alert_ticket: AlertTicket = { action_attempted: Actions.submit, msg: 'Could Not Submit', type: 'danger' };\n\n        this.variables.addAlert(alert_ticket);\n        this.submitForm.reset();\n        this.bitComp.init(null);\n      }\n    )\n\n  }\n  fileChangeEvent(event) {\n    var old_file = event.target.files[0];\n\n    this.submission.content_extension = \".\" + old_file.name.split('.').pop();\n\n    this.submission.content_type = old_file.type;\n    this.bitComp.init(old_file);\n    this.content_file = new File([old_file], \"temp\", { type: old_file.type });\n\n  }\n  reset() {\n    this.variables.setup();\n    this.router.navigate(['/layout/home']);\n  }\n\n}\n","<div class=\"row justify-content-center two_four_card_holder\">\n    <div class=\"col-lg-7 col-sm-12 sm_reduce_col_12_padding\">\n        <div  class=\"card two_four_card\">\n            <form [formGroup]=\"submitForm\" (ngSubmit)=\"submit()\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <fieldset class=\"col-12\">\n                            <legend>Description</legend>\n                            <textarea formControlName=\"description\" class=\"form-control textarea\" rows=\"1\"></textarea>\n                        </fieldset>\n                        <div class=\" offset-1 col-10  textarea_icon_container needs_margin_bottom  \">\n                            <app-bit-content [placeholder]=\"true\"></app-bit-content>\n                            <input hidden class=\"target_input\" type=\"file\" (change)=\"fileChangeEvent($event)\" accept=\"\n                            video/*,\n                            audio/*,\n                            image/*\n                            \" />\n                            <button class=\"long_12_button button_upload \" mat-raised-button color=\"accent\"\n                                matTooltip=\"Photo/Audio/Video\" [matTooltipPosition]=\"'after'\" #tooltip=\"matTooltip\"\n                                (click)=\"tooltip.toggle()\" type=\"button\">\n                                Upload Photo/Image/Video\n                            </button>\n                        </div>\n                        <div class=\"col-12 needs_margin_bottom \">\n                            <button type=\"submit\" *ngIf=\"submitForm.valid\" class=\"long_12_button\" mat-raised-button\n                                color=\"primary\">Submit</button>\n                            <button *ngIf=\"submitForm.invalid\" class=\"long_12_button\" mat-raised-button\n                                disabled>Submit</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { backendUrl ,image_server_url } from 'src/app/constants/app.constant';\nimport { Submission } from 'src/app/interfaces/submission';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubmitModalService {\n\n  constructor(private http:HttpClient) { }\n\n  submit(submission:Submission)\n  {\n    return this.http.post(backendUrl+\"submit\",submission);\n  }\n\n  uploadSubmission(file:File)\n  {\n    const formData = new FormData();\n    formData.append('content',file);\n    return this.http.post(image_server_url +\"upload\",formData);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UpdateComponent } from './update/update.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { FourDigitCodeComponent } from './four-digit-code/four-digit-code.component';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { ReverseAuthGuard } from './reverse.auth.guard';\r\nimport { SubmitModalComponent } from './home/submit-modal/submit-modal.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminAuthGuard } from './admin.auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n    {\r\n        path:'',\r\n        component: LayoutComponent,\r\n        children:[\r\n                    { path: '', redirectTo:'home', pathMatch:\"prefix\"},\r\n\r\n                    {\r\n                        path:\"home\",\r\n                        component: HomeComponent,\r\n                    },\r\n                    {\r\n                        path:\"login\",\r\n                        component: LoginComponent,\r\n                        canActivate:[ReverseAuthGuard]\r\n                    }\r\n                    ,\r\n                    {\r\n                        path:\"signup\",\r\n                        component: SignupComponent,\r\n                        canActivate:[ReverseAuthGuard]\r\n                    },\r\n                    {\r\n                        path:\"authenticate\",\r\n                        component: FourDigitCodeComponent,\r\n                        canActivate:[ReverseAuthGuard]\r\n                    },\r\n                    {\r\n                        path:\"update\",\r\n                        component: UpdateComponent,\r\n                        canActivate: [AuthGuard]\r\n                    },\r\n                    {\r\n                        path:\"submit\",\r\n                        component: SubmitModalComponent,\r\n                        canActivate: [AuthGuard]\r\n                    },\r\n                    {\r\n                        path:\"team\",\r\n                        component:WelcomeComponent\r\n                    },\r\n                    {\r\n                        path:\"admin\",\r\n                        component:AdminComponent,\r\n                        canActivate:[AdminAuthGuard]\r\n                    },\r\n                    \r\n                    { path: '**', redirectTo:'home', pathMatch:\"prefix\"},\r\n        ]\r\n    }\r\n\r\n    \r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LayoutRoutingModule { }\r\n\r\n\r\n\r\n\r\n// canActivate: [AuthGuard]","import { Component, OnInit } from '@angular/core';\r\nimport { UIService } from '../service/ui.service';\r\nimport { AppVariablesService } from '../service/app-variables.service';\r\nimport { Member } from '../models/member';\r\nimport { UpdateComponent } from './update/update.component';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  member: Observable<Member> = new Observable<Member>();\r\n  init_boolean = false;\r\n  constructor(private router: Router, private ui: UIService, private variables: AppVariablesService) { \r\n    this.init();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  init() {\r\n    this.variables.setup();\r\n    this.getMember();\r\n  }\r\n  toggle(sidenav) {\r\n    if (sidenav.opened) {\r\n      sidenav.close();\r\n    }\r\n    else {\r\n      sidenav.open();\r\n    }\r\n  }\r\n  get render_class() {\r\n    return this.ui.container_or_fluid();\r\n  }\r\n  getMember() {\r\n    this.member = this.variables.current_member_ob;\r\n  }\r\n  onActivate(event) {\r\n    if (event instanceof UpdateComponent) {\r\n      let thing = <UpdateComponent>event;\r\n      this.member.subscribe(data => thing.member= data );\r\n    }\r\n  }\r\n  logOff() {\r\n    this.variables.logOff()\r\n    this.router.navigate(['/layout/home/']);\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container>\r\n    <mat-sidenav #sidenav mode=\"push\" opened=\"false\">\r\n        <mat-toolbar color=\"primary\">\r\n            <a routerLink=\"/update\" class=\"mat-toolbar-a\">\r\n                <mat-icon>account_circle</mat-icon>\r\n                <span>{{(member| async)?.username}}</span>\r\n            </a>\r\n            <a class=\"mat-toolbar-a\" *ngIf=\"(member | async) == null\" routerLink=\"/update\">Login</a>\r\n        </mat-toolbar>\r\n        <mat-selection-list #links [multiple]=\"false\">\r\n            <mat-list-option>\r\n                <a mat-list-item routerLink=\"/home\">\r\n                    <legend>Contest</legend>\r\n                </a>\r\n            </mat-list-option>\r\n            <mat-list-option *ngIf=\"(member | async) != null\">\r\n                <a mat-list-item (click)=\"logOff()\">\r\n                    <legend>Log Off</legend>\r\n                </a>\r\n            </mat-list-option>\r\n            <mat-list-option *ngIf=\"(member | async)!=null && (member | async).role=='admin'\">\r\n                <a mat-list-item  routerLink=\"/admin\">\r\n                    <legend>Admin</legend>\r\n                </a>\r\n            </mat-list-option>\r\n\r\n            <mat-list-option>\r\n                <a mat-list-item routerLink=\"/team\">\r\n                    <legend>Meet The Team</legend>\r\n                </a>\r\n            </mat-list-option>\r\n        </mat-selection-list>\r\n\r\n        <app-footer></app-footer>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <div class=\"layout\">\r\n            <img class=\"background\" src=\"../../assets/icons/background.png\" alt=\"background\">\r\n            <nav class=\"custom_navbar\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-4\">\r\n                        <button (click)=\"toggle(sidenav)\" mat-icon-button color=\"primary\">\r\n                            <mat-icon>menu</mat-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"col-4 text-center\">\r\n                        <a routerLink=\"/home\">\r\n                            Blu Morel\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <app-loader></app-loader>\r\n\r\n            <div [class]=\"render_class\">\r\n                <router-outlet (activate)='onActivate($event)'></router-outlet>\r\n            </div>\r\n\r\n\r\n            <app-alert-manager></app-alert-manager>\r\n\r\n        </div>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UpdateComponent } from './update/update.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { FourDigitCodeComponent } from './four-digit-code/four-digit-code.component';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { LayoutRoutingModule } from './layout-routing.module';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { ReverseAuthGuard } from './reverse.auth.guard';\r\nimport { CountTimePipe } from '../pipe/count-time.pipe';\r\nimport { CountdownComponent } from './home/countdown/countdown.component';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { SubmitModalComponent } from './home/submit-modal/submit-modal.component';\r\nimport { BitContentComponent } from './bit-content/bit-content.component';\r\nimport { SafeHtmlPipe } from '../pipe/safe-html.pipe';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { AlertManagerComponent } from './alert-manager/alert-manager.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { UpdateService } from './update/update.service';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminAuthGuard } from './admin.auth.guard';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatProgressSpinnerModule, } from '@angular/material/progress-spinner';\r\nimport { LoaderComponent } from './loader/loader.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n\r\n    CountTimePipe, SafeHtmlPipe,\r\n    HomeComponent, UpdateComponent, LoginComponent,\r\n    SignupComponent, FourDigitCodeComponent, LayoutComponent,\r\n    FooterComponent, CountdownComponent, SubmitModalComponent,\r\n    BitContentComponent,\r\n    AlertManagerComponent,\r\n    WelcomeComponent,\r\n    AdminComponent,\r\n    LoaderComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    LayoutRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule, MatFormFieldModule, MatInputModule,\r\n    MatButtonModule, MatIconModule, MatProgressBarModule,\r\n    MatCheckboxModule, MatChipsModule, MatTooltipModule,\r\n    MatDialogModule, MatBadgeModule, MatMenuModule,\r\n    NgbModule, FontAwesomeModule, MatExpansionModule,\r\n    MatStepperModule, MatTableModule, MatRippleModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    ReverseAuthGuard,\r\n    UpdateService,\r\n    AdminAuthGuard,\r\n  ]\r\n})\r\nexport class LayoutModule {\r\n  constructor() {\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from './loader.service';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  show:boolean;\n  constructor(private loaderServe:LoaderService) { }\n\n  ngOnInit(): void {\n    this.loaderServe.loaderOB.subscribe(data => this.show = data);\n  }\n\n}\n","<div *ngIf=\"show\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  private loader:boolean=false;\n  private loaderBS:BehaviorSubject<boolean> = new BehaviorSubject<boolean>(this.loader);\n  loaderOB:Observable<boolean> = this.loaderBS.asObservable();\n\n  constructor() { }\n\n  showOrHide(choice:boolean)\n  {\n    this.loader = choice;\n    this.loaderBS.next(this.loader);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderinterceptService implements HttpInterceptor {\n\n  constructor(private  loaderServe:LoaderService ) { }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.loaderServe.showOrHide(true);\n    return next.handle(req).pipe(tap((event: HttpEvent<any>) => { \n      if (event instanceof HttpResponse) {\n        this.loaderServe.showOrHide(false);\n      }\n    },\n      (err: any) => {\n        this.loaderServe.showOrHide(false);\n    }));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\nimport { GlobalService } from 'src/app/service/global.service';\nimport { Member } from 'src/app/models/member';\nimport { Ticket } from 'src/app/interfaces/ticket';\nimport { Actions } from 'src/app/constants/app.constant';\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  constructor(private router: Router, private appVariables: AppVariablesService, private glob: GlobalService) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  initForm() {\n    this.loginForm = new FormGroup(\n      {\n        email_phone_username: new FormControl(null, [\n          Validators.required\n        ]),\n        password: new FormControl(null, [\n          Validators.required\n        ])\n      }\n    );\n  }\n\n\n  submit() {\n    if (this.loginForm.valid) {\n      var ticket: Ticket = {\n        id: this.loginForm.get(\"email_phone_username\").value,\n        data: this.loginForm.get(\"password\").value\n      };\n      this.glob.login(ticket).subscribe(data => {\n\n        this.appVariables.fillMember(<Member>data, ticket);\n        this.router.navigate(['layout/home']);\n        var alert_ticket:AlertTicket= {action_attempted:Actions.login,msg:'Login Worked',type:'success'};\n\n        this.appVariables.addAlert(alert_ticket);\n      },\n        error => {\n          var alert_ticket:AlertTicket= {action_attempted:Actions.login,msg:'Login Failed',type:'danger'};\n\n        this.appVariables.addAlert(alert_ticket);\n        });\n    }\n  }\n\n  signUp() {\n    this.router.navigate(['/layout/signup'])\n  }\n\n\n}\n","<div class=\"row justify-content-center two_four_card_holder\">\r\n    <div class=\"col-lg-6 col-sm-12 sm_reduce_col_12_padding\">\r\n        <div class=\"card two_four_card\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\r\n\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        <fieldset class=\"col-12\">\r\n                            <input matInput class=\"form-control\" placeholder=\"Email or Phone Number or Username\"\r\n                                formControlName=\"email_phone_username\" type=\"text\">\r\n                        </fieldset>\r\n                        <fieldset class=\"col-12\">\r\n                            <input matInput class=\"form-control\" placeholder=\"Password\" formControlName=\"password\"\r\n                                type=\"password\">\r\n                        </fieldset>\r\n                        <div class=\"col-12 needs_margin_bottom\">\r\n                            <button *ngIf=\"loginForm.valid\" class=\"long_12_button \" type=\"\"\r\n                                mat-raised-button color=\"primary\">Login</button>\r\n                            <button *ngIf=\"loginForm.invalid\" class=\"long_12_button\"\r\n                                mat-raised-button disabled>Login</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row needs_margin_bottom\">\r\n                        <div class=\"col-12 text-center \">\r\n                            <button (click)=\"signUp()\" mat-raised-button color=\"accent\">Create Account</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { Router, CanActivate } from \"@angular/router\";\r\nimport { AppVariablesService } from '../service/app-variables.service';\r\n\r\n@Injectable()\r\nexport class ReverseAuthGuard implements CanActivate {\r\n  path: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n  route: import(\"@angular/router\").ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router,private appVariables:AppVariablesService) { }\r\n\r\n  canActivate() {\r\n    if(localStorage.getItem(\"current_member_id\") !=null)\r\n    {\r\n      \r\n      this.router.navigate(['/layout/home']);\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { MyErrorStateMatcher } from 'src/app/constants/error.state.matches';\r\nimport { GlobalService } from 'src/app/service/global.service';\r\nimport { Member } from 'src/app/models/member';\r\nimport { Router } from '@angular/router';\r\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\r\nimport { Actions } from 'src/app/constants/app.constant';\r\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  signUpForm: FormGroup;\r\n  matcher = new MyErrorStateMatcher;\r\n  email_regex = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$'\r\n  phoneno = /\\d/g;\r\n  constructor(private router: Router, private glob: GlobalService, private appvariables: AppVariablesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n  createForm() {\r\n    this.signUpForm = new FormGroup(\r\n      {\r\n        username: new FormControl(null, [Validators.required]),\r\n        email_phone: new FormControl(null, [Validators.required]),\r\n        password: new FormControl(null, [Validators.required]),\r\n        password_check: new FormControl(null, [Validators.required]),\r\n        newsletter: new FormControl(true, []),\r\n        notify: new FormControl(true, [])\r\n      }, { validators: this.checkPasswords }\r\n    )\r\n  }\r\n  submit() {\r\n    var messageMedium = this.email_or_phone();\r\n\r\n    if (messageMedium != null) {\r\n      var member: Member = new Member(\r\n        this.signUpForm.get(\"username\").value,\r\n        null,\r\n        null,\r\n        false,\r\n        1,\r\n        null,\r\n        null,\r\n        null,\r\n        this.signUpForm.get(\"newsletter\").value,\r\n        messageMedium,\r\n        this.signUpForm.get(\"notify\").value,\r\n        null\r\n      )\r\n      member.password = this.signUpForm.get(\"password\").value;\r\n      var choice_id\r\n      if (messageMedium == \"EMAIL\") {\r\n        member.email = this.signUpForm.get(\"email_phone\").value;\r\n        choice_id = member.email\r\n      }\r\n      else {\r\n        member.phone = this.signUpForm.get(\"email_phone\").value;\r\n        choice_id = member.phone\r\n      }\r\n      this.glob.generateCode(member).subscribe(data => {\r\n      this.appvariables.temp_member = member;\r\n      this.appvariables.temp_ticket = {\r\n          id: choice_id,\r\n          data: member.password\r\n          }\r\n        this.router.navigate(['/layout/authenticate']);\r\n      },\r\n      error =>{\r\n        var alert_ticket:AlertTicket= {action_attempted:Actions.signup,msg:'Sign Up Failed',type:'danger'};\r\n\r\n        this.appvariables.addAlert(alert_ticket);\r\n      })\r\n    }\r\n   else{\r\n    var alert_ticket:AlertTicket= {action_attempted:Actions.signup,msg:'enter phone number or email',type:'danger'};\r\n\r\n    this.appvariables.addAlert(alert_ticket);\r\n   } \r\n  }\r\n\r\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\r\n    let pass = group.get('password').value;\r\n    let confirmPass = group.get('password_check').value;\r\n\r\n    return pass === confirmPass ? null : { notSame: true }\r\n  }\r\n\r\n  email_or_phone() {\r\n    var emailPhone: string = this.signUpForm.get(\"email_phone\").value\r\n    if (emailPhone.match(this.email_regex)) {\r\n      return 'EMAIL'\r\n    }\r\n    else if (emailPhone.match(this.phoneno) &&emailPhone.match(this.phoneno).length === 10) {\r\n      return 'PHONE'\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row justify-content-center two_four_card_holder\">\n    <div class=\"col-lg-6 col-sm-12 sm_reduce_col_12_padding\">\n        <div class=\"card two_four_card\">\n            <form [formGroup]=\"signUpForm\" (ngSubmit)=\"submit()\">\n\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <fieldset class=\"col-12\">\n                            <input matInput class=\"form-control\" placeholder=\"Username\"\n                                formControlName=\"username\" type=\"text\">\n                        </fieldset>\n                        <fieldset class=\"col-12\">\n                            <input matInput class=\"form-control\" placeholder=\"Email or Phone Number\"\n                                formControlName=\"email_phone\" type=\"text\">\n                        </fieldset>\n                        <fieldset class=\"col-12\">\n                            <input  matInput class=\"form-control\" placeholder=\"Password\" formControlName=\"password\"\n                                type=\"password\">\n                        </fieldset>\n                        <fieldset class=\"col-12\">\n                            <input type=\"password\" class=\"form-control\" matInput placeholder=\"Confirm password\" formControlName=\"password_check\" [errorStateMatcher]=\"matcher\">\n                        </fieldset>\n                        <fieldset class=\"col-12\">\n                            <mat-checkbox formControlName=\"newsletter\" class=\"col-6\" color=\"primary\"  >\n                                <small>\n                                    Sign Up For Newsletter\n                                </small>\n                            </mat-checkbox>\n                            <mat-checkbox formControlName=\"notify\" class=\"col-6\" color=\"primary\"  >\n                                <small>\n                                    Blu Morel Notifications\n                                </small>\n                            </mat-checkbox>\n                        </fieldset>\n                        <div class=\"col-12\">\n                            <button *ngIf=\"signUpForm.valid\"  class=\"long_12_button\" mat-raised-button color=\"primary\">Sign up</button>\n                            <button *ngIf=\"signUpForm.invalid\"  class=\"long_12_button\" mat-raised-button disabled>Sign up</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Member } from 'src/app/models/member';\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { faFacebook, faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons';\r\nimport { UIService } from 'src/app/service/ui.service';\r\nimport { MyErrorStateMatcher } from 'src/app/constants/error.state.matches';\r\nimport { UpdateService } from './update.service';\r\nimport { Ticket } from 'src/app/interfaces/ticket';\r\nimport { GlobalService } from 'src/app/service/global.service';\r\nimport { AppVariablesService } from 'src/app/service/app-variables.service';\r\nimport { Actions } from 'src/app/constants/app.constant';\r\nimport { AlertTicket } from 'src/app/interfaces/alert-ticket';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-update',\r\n  templateUrl: './update.component.html',\r\n  styleUrls: ['./update.component.scss']\r\n})\r\nexport class UpdateComponent implements OnInit {\r\n\r\n  member: Member\r\n  usernameForm: FormGroup;\r\n  emailForm: FormGroup;\r\n  phoneForm: FormGroup;\r\n  facebookForm: FormGroup;\r\n  instagramForm: FormGroup;\r\n  twitterForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  noticeForm: FormGroup;\r\n\r\n  matcher = new MyErrorStateMatcher;\r\n\r\n  phoneno = /\\d/g;\r\n\r\n  facebook = faFacebook;\r\n  instagram = faInstagram;\r\n  twitter = faTwitter;\r\n\r\n  choice: string;\r\n  message;\r\n  @ViewChild('classic1') modal: ElementRef;\r\n  constructor(\r\n    private uiserve: UIService,\r\n    private updateServe: UpdateService,\r\n    private variables: AppVariablesService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  createForm() {\r\n\r\n    switch (this.choice) {\r\n      case 'username':\r\n        this.usernameForm = new FormGroup({\r\n          username: new FormControl(this.member.username, Validators.required)\r\n        });\r\n        break;\r\n      case 'email':\r\n        this.emailForm = new FormGroup({\r\n          target: new FormControl(this.member.email, [Validators.required, Validators.email]),\r\n          confirm: new FormControl(null, [Validators.required, Validators.email])\r\n\r\n        }, { validators: this.confirming });\r\n        break;\r\n      case 'phone':\r\n        this.phoneForm = new FormGroup({\r\n          phone: new FormControl(this.member.phone, [Validators.pattern(this.phoneno), Validators.min(10)])\r\n        });\r\n        break;\r\n      case 'facebook':\r\n        this.facebookForm = new FormGroup({\r\n          facebook: new FormControl(this.member.facebook, Validators.required)\r\n        });\r\n        break;\r\n      case 'twitter':\r\n        this.twitterForm = new FormGroup({\r\n          twitter: new FormControl(this.member.twitter, Validators.required)\r\n        });\r\n        break;\r\n      case 'instagram':\r\n        this.instagramForm = new FormGroup({\r\n          instagram: new FormControl(this.member.instagram, Validators.required)\r\n        });\r\n        break;\r\n      case 'password':\r\n        this.passwordForm = new FormGroup({\r\n          old_password: new FormControl(null, Validators.required),\r\n          target: new FormControl(null, Validators.required),\r\n          confirm: new FormControl(null, Validators.required)\r\n\r\n        }, { validators: this.confirming });\r\n        break;\r\n      case 'notifications':\r\n        this.noticeForm = new FormGroup({\r\n          notify: new FormControl(this.member.notify),\r\n          newsletter: new FormControl(this.member.newsletter)\r\n        });\r\n        break;\r\n    }\r\n\r\n  }\r\n  choose(choice) {\r\n    this.choice = choice;\r\n    this.createForm();\r\n    this.uiserve.open(this.modal, \"modal-mini\", 'sm');\r\n  }\r\n\r\n  submit() {\r\n    var temp: Member = new Member(\r\n      this.member.username,\r\n      this.member.email,\r\n      this.member.phone,\r\n      this.member.verified,\r\n      this.member.post_count,\r\n      this.member.facebook,\r\n      this.member.instagram,\r\n      this.member.twitter,\r\n      this.member.newsletter,\r\n      this.member.messageMedium,\r\n      this.member.notify,\r\n      null\r\n    )\r\n    switch (this.choice) {\r\n      case 'notifications':\r\n        temp.newsletter = this.noticeForm.get(\"newsletter\").value;\r\n        temp.notify = this.noticeForm.get(\"notify\").value;\r\n        break;\r\n      case 'username':\r\n        temp.username = this.usernameForm.get(\"username\").value;\r\n        break;\r\n      case 'email':\r\n        temp.email = this.emailForm.get(\"target\").value;\r\n        if (temp.phone != null) {\r\n          temp.messageMedium = 'BOTH'\r\n        }\r\n        break;\r\n      case 'phone':\r\n        temp.phone = this.phoneForm.get(\"phone\").value;\r\n        if (temp.email != null) {\r\n          temp.messageMedium = 'BOTH'\r\n        }\r\n        break;\r\n      case 'facebook':\r\n        temp.facebook = this.facebookForm.get(\"facebook\").value;\r\n        break;\r\n      case 'twitter':\r\n        temp.twitter = this.twitterForm.get(\"twitter\").value;\r\n        break;\r\n      case 'instagram':\r\n        temp.instagram = this.instagramForm.get(\"instagram\").value;\r\n        break;\r\n      case 'password':\r\n        var ticket: Ticket = {\r\n          id: this.member.username, data: {\r\n            old_password: this.passwordForm.get('old_password').value,\r\n            password: this.passwordForm.get(\"target\").value\r\n          }\r\n        }\r\n        this.updateServe.updatePassword(ticket).subscribe(\r\n          data => {\r\n            var alert_ticket: AlertTicket = {\r\n              action_attempted: Actions.signup,\r\n              msg: 'Updated ' + this.choice.toLocaleUpperCase(),\r\n              type: 'success'\r\n            };\r\n\r\n            this.variables.addAlert(alert_ticket);\r\n\r\n            this.cancel();\r\n\r\n          },\r\n          error => {\r\n            this.message = \"Failed\"\r\n          }\r\n        )\r\n        return;\r\n    }\r\n\r\n    var ticket: Ticket = { id: this.member.username, data: temp }\r\n    this.updateServe.update(ticket).subscribe(\r\n      data => {\r\n        this.variables.reloadBS(temp);\r\n        var alert_ticket: AlertTicket = {\r\n          action_attempted: Actions.signup,\r\n          msg: 'Updated ' + this.choice.toLocaleUpperCase(),\r\n          type: 'success'\r\n        };\r\n\r\n        this.variables.addAlert(alert_ticket);\r\n        this.cancel();\r\n      },\r\n      error => {\r\n        this.message = \"Failed\"\r\n      }\r\n    )\r\n\r\n\r\n\r\n  }\r\n\r\n  private confirming(c: AbstractControl): { invalid: boolean } {\r\n    if (c.get(\"target\").value !== c.get(\"confirm\").value) {\r\n      return { invalid: true };\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.uiserve.dismissAll();\r\n  }\r\n\r\n}\r\n","<div class=\"row justify-content-center two_four_card_holder\">\n    <div class=\"col-lg-4 col-sm-12 sm_reduce_col_12_padding\">\n        <div class=\"card two_four_card\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <mat-selection-list class=\"text-center\" [multiple]=\"false\">\n                        <mat-list-option matRipple [matRippleColor]=\"'#ffab40'\">\n                            <a mat-list-item (click)=\"choose('username')\">\n                                <mat-icon color=\"primary\">account_circle</mat-icon>\n                                <span>{{member?.username}}</span>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('email')\" matRipple [matRippleColor]=\"'#ffab40'\">\n                                <mat-icon color=\"primary\">email</mat-icon>\n                                <span *ngIf=\"member?.email; else noEmail\">{{member.email}}</span>\n                                <ng-template #noEmail>Email</ng-template>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('phone')\" matRipple [matRippleColor]=\"'#ffab40'\">\n                                <mat-icon color=\"primary\">phone</mat-icon>\n                                <span *ngIf=\"member?.phone; else noPhone\">{{member.phone}}</span>\n                                <ng-template #noPhone>Phone</ng-template>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('facebook')\" matRipple [matRippleColor]=\"'#ffab40'\">\n                                <fa-icon [icon]=\"facebook\" size=\"lg\"></fa-icon>\n                                <span *ngIf=\"member?.facebook; else noFacebook\">{{member.facebook}}</span>\n                                <ng-template #noFacebook>Facebook</ng-template>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('twitter')\" matRipple [matRippleColor]=\"'#ffab40'\">\n                                <fa-icon [icon]=\"twitter\" size=\"lg\"></fa-icon>\n                                <span *ngIf=\"member?.twitter; else noTwitter\">{{member.twitter}}</span>\n                                <ng-template #noTwitter>Twitter</ng-template>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('instagram')\" matRipple [matRippleColor]=\"'#ffab40'\">\n                                <fa-icon [icon]=\"instagram\" size=\"lg\"></fa-icon>\n                                <span *ngIf=\"member?.instagram; else noInstagram\">{{member.instagram}}</span>\n                                <ng-template #noInstagram>Instagram</ng-template>\n                            </a>\n                        </mat-list-option>\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('password')\" matRipple [matRippleColor]=\"'#ffab40'\">\n                                <mat-icon color=\"primary\">lock</mat-icon>\n                                <span>Password</span>\n                            </a>\n                        </mat-list-option>\n\n                        <mat-list-option>\n                            <a mat-list-item (click)=\"choose('notifications')\" matRipple [matRippleColor]=\"'#ffab40'\">\n                                <mat-icon color=\"primary\">notification_important</mat-icon>\n                                <span>Notification</span>\n                            </a>\n                        </mat-list-option>\n                    </mat-selection-list>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!-- /////////////////////////////////////////////////////////////////////////////////////////////////////////// -->\n\n\n\n<div class=\"modal\">\n    <ng-template #classic1 let-c=\"close\" let-d=\"dismiss\">\n        <strong class=\"modal-title\">Update ~ {{message | titlecase}}</strong>\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n                <form *ngIf=\"choice=='username'; else email\" [formGroup]=\"usernameForm\" (ngSubmit)=\"submit()\">\n                    <mat-form-field class=\"long_12_button\">\n                        <mat-label>{{choice | titlecase}}</mat-label>\n                        <input formControlName=\"username\" matInput placeholder=\"Enter Username\">\n                    </mat-form-field>\n                    <button type=\"submit\" *ngIf=\"usernameForm.valid\" class=\"long_12_button\" mat-raised-button\n                        color=\"primary\">Submit</button>\n                    <button *ngIf=\"usernameForm.invalid\" class=\"long_12_button\" mat-raised-button\n                        disabled>Submit</button>\n                </form>\n                <ng-template #email>\n                    <form *ngIf=\"choice=='email' else phone\" [formGroup]=\"emailForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>{{choice | titlecase}}</mat-label>\n                            <input formControlName=\"target\" matInput placeholder=\"Enter Email\">\n                        </mat-form-field>\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>Confim {{choice | titlecase}} </mat-label>\n                            <input formControlName=\"confirm\" matInput placeholder=\"Confirm Email\"\n                                [errorStateMatcher]=\"matcher\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"emailForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"emailForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #phone>\n                    <form *ngIf=\"choice=='phone' else facebook\" [formGroup]=\"phoneForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>{{choice | titlecase}}</mat-label>\n                            <input formControlName=\"phone\" matInput placeholder=\"Enter Phone\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"phoneForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"phoneForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #facebook>\n                    <form *ngIf=\"choice=='facebook' else twitter\" [formGroup]=\"facebookForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <input formControlName=\"facebook\" matInput placeholder=\"Fill In Route facebook.com/\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"facebookForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"facebookForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #twitter>\n                    <form *ngIf=\"choice=='twitter' else instagram\" [formGroup]=\"twitterForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <input formControlName=\"twitter\" matInput placeholder=\"Fill In Route twitter.com/\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"twitterForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"twitterForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #instagram>\n                    <form *ngIf=\"choice=='instagram' else password\" [formGroup]=\"instagramForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <input formControlName=\"instagram\" matInput placeholder=\"Fill In Route instagram.com/\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"instagramForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"instagramForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #password>\n                    <form *ngIf=\"choice=='password' else notifications\" [formGroup]=\"passwordForm\" (ngSubmit)=\"submit()\">\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>Old {{choice | titlecase}}</mat-label>\n                            <input type=\"password\" formControlName=\"old_password\" matInput\n                                placeholder=\"Enter Old Password\">\n                        </mat-form-field>\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>New {{choice | titlecase}}</mat-label>\n                            <input type=\"password\" formControlName=\"target\" matInput placeholder=\"New Password\">\n                        </mat-form-field>\n                        <mat-form-field class=\"long_12_button\">\n                            <mat-label>Confim {{choice | titlecase}} </mat-label>\n                            <input type=\"password\" formControlName=\"confirm\" matInput placeholder=\"Confirm Password\"\n                                [errorStateMatcher]=\"matcher\">\n                        </mat-form-field>\n                        <button type=\"submit\" *ngIf=\"passwordForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"passwordForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n                <ng-template #notifications>\n                    <form *ngIf=\"choice=='notifications';\" [formGroup]=\"noticeForm\" (ngSubmit)=\"submit()\">\n                        <mat-checkbox formControlName=\"newsletter\" class=\"col-6\" color=\"primary\"  >\n                            <small>\n                                Sign Up For Newsletter\n                            </small>\n                        </mat-checkbox>\n                        <mat-checkbox formControlName=\"notify\" class=\"col-6\" color=\"primary\"  >\n                            <small>\n                                Blu Morel Notifications\n                            </small>\n                        </mat-checkbox>\n                        <button type=\"submit\" *ngIf=\"noticeForm.valid\" class=\"long_12_button\" mat-raised-button\n                            color=\"primary\">Submit</button>\n                        <button *ngIf=\"noticeForm.invalid\" class=\"long_12_button\" mat-raised-button\n                            disabled>Submit</button>\n                    </form>\n                </ng-template>\n            </div>\n        </div>\n    </ng-template>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Ticket } from 'src/app/interfaces/ticket';\nimport { backendUrl } from 'src/app/constants/app.constant';\nimport { Member } from 'src/app/models/member';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateService {\n  \n  \n\n  constructor(private http:HttpClient) { }\n\n\n  updatePassword(ticket:Ticket) {\n    return this.http.post(backendUrl+\"updatePassword\",ticket);\n  }\n  update(ticket:Ticket) {\n    return this.http.post(backendUrl+\"update\",ticket);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport {  faFacebook, faTwitter,faInstagram } from '@fortawesome/free-brands-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.scss']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  @Input() placeholder =false;\r\n  facebook = faFacebook;\r\n  instagram = faInstagram;\r\n  twitter = faTwitter;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row justify-content-center two_four_card_holder\">\r\n    <div class=\"col-lg-9 col-sm-12 sm_reduce_col_12_padding\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row \">\r\n                    <div class=\"col-lg-3 \">\r\n                        <img class=\"about_image\" src=\"assets/icons/roice.jpg\" alt=\"RoiceJohnson\">\r\n                    </div>\r\n                    <div class=\"col-lg-9\">\r\n                        <div class=\"card welcome_card\">\r\n                            <div class=\"card-header\">\r\n                                ROCE JOHNSON CEO & LEAD ENGINEER\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n                                <p>\r\n                                    Roice graduated from University of North Carolina at Charlotte in 2018, with a B.S\r\n                                    degree in Computer Science. Shortly after graduation, he joined  \r\n                                    Fidelity Investments as a Software Engineer, During this time he founded a software\r\n                                    company Loop, and is now the owner and operator of the company.\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"card-footer text-center\">\r\n                                <mat-chip-list>\r\n                                    <mat-chip>\r\n                                        <a mat-list-item target=\"_blank\" href=\"https://facebook.com/kuruma.jinchuuriki\">\r\n                                            <fa-icon [icon]=\"facebook\" size=\"lg\"></fa-icon>\r\n                                            <strong>kuruma.jinchuuriki</strong>\r\n                                        </a>\r\n                                    </mat-chip>\r\n                                    <mat-chip>\r\n                                        <a mat-list-item target=\"_blank\" href=\"https://twitter.com/RoiceJohnson\">\r\n                                            <fa-icon [icon]=\"twitter\" size=\"lg\"></fa-icon>\r\n                                            <strong>RoiceJohnson</strong>\r\n                                        </a>\r\n                                    </mat-chip>\r\n                                    <mat-chip>\r\n                                        <a mat-list-item target=\"_blank\"\r\n                                            href=\"https://instagram.com/really_narutouszamki\">\r\n                                            <fa-icon [icon]=\"instagram\" size=\"lg\"></fa-icon>\r\n                                            <strong>really_narutouszamki</strong>\r\n                                        </a>\r\n                                    </mat-chip>\r\n\r\n                                </mat-chip-list>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export class Member {\r\n    username: string;\r\n    email: string;\r\n    phone: string;\r\n    verified: boolean;\r\n    post_count: number;\r\n    facebook: string;\r\n    instagram: string;\r\n    twitter: string;\r\n    newsletter:boolean;\r\n    messageMedium:string;\r\n    notify:boolean;\r\n    password:string;\r\n    role:string;\r\n\r\n\r\n    constructor(\r\n                username:string,\r\n                email:string,\r\n                phone:string,\r\n                verified:boolean,\r\n                post_count:number,\r\n                facebook: string,\r\n                instagram:string,\r\n                twitter:string,\r\n                newsletter:boolean,\r\n                messageMedium:string,\r\n                notify:boolean,\r\n                role:string\r\n             )\r\n            {\r\n                this.username = username;\r\n                this.email = email;\r\n                this.phone = phone;\r\n                this.verified = verified;\r\n                this.post_count = post_count;\r\n                this.facebook = facebook;\r\n                this.instagram = instagram;\r\n                this.twitter = twitter;\r\n                this.newsletter = newsletter;\r\n                this.messageMedium = messageMedium;\r\n                this. notify = notify\r\n                this.role = role;\r\n            }\r\n}\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'count_time'\n})\nexport class CountTimePipe implements PipeTransform {\n\n  transform(value: any, ...args: unknown[]): unknown {\n    const intervals = [\n      3600,60,1\n    ];\n        \n\n        var val = value;\n        var place = 0;\n        var time = [];\n        while(val > 0 && place < intervals.length)\n        {\n           var  amount = val/intervals[place]\n\n           val = val - Math.floor(amount)*intervals[place];\n           time.push(amount);\n           place++;\n        }\n      for(const i in time)\n      {\n        \n        time[i] = Math.floor(time[i]);\n        if(time[i]== undefined) time[i] = \"00\";\n        if(time[i]<10) time[i] = \"0\"+time[i];\n      }\n        \n      return `${time[0]}:${time[1]}:${time[2]}`\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport {DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl} from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {\n  }\n  public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n\t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { Member } from '../models/member';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { GlobalService } from './global.service';\nimport { Ticket } from '../interfaces/ticket';\nimport { Contest } from '../models/contest';\nimport { IAlert, Type } from '../layout/alert-manager/alert-manager.component';\nimport { AlertTicket } from '../interfaces/alert-ticket';\nimport { Actions } from '../constants/app.constant';\nimport { Submission } from '../interfaces/submission';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppVariablesService {\n\n  current_member_id: string = localStorage.getItem(\"current_member_id\");\n  current_member_encrypted_password: string = localStorage.getItem(\"current_member_encrypted_password\");\n  current_member: Member;\n  current_member_bs: BehaviorSubject<Member> = new BehaviorSubject<Member>(this.current_member);\n  current_member_ob: Observable<Member> = this.current_member_bs.asObservable();\n\n  currentContest: Contest;\n  currentContest_bs: BehaviorSubject<Contest> = new BehaviorSubject<Contest>(this.currentContest);\n  currentContest_ob: Observable<Contest> = this.currentContest_bs.asObservable();\n\n  previousWinner: Submission;\n  previousWinner_bs: BehaviorSubject<Submission> = new BehaviorSubject<Submission>(this.previousWinner);\n  previousWinner_ob: Observable<Submission> = this.previousWinner_bs.asObservable();\n\n  temp_member: Member\n  temp_ticket: Ticket;\n\n\n  alerts: IAlert[] = []\n  alerts_bs: BehaviorSubject<IAlert[]> = new BehaviorSubject<IAlert[]>(this.alerts);\n  alerts_ob: Observable<IAlert[]> = this.alerts_bs.asObservable();\n\n  private count = 0;\n  private popup = 5000;\n\n  private types =\n    {\n      success: {\n        icon: 'ni ni-like-2',\n        strong: 'Success!',\n      },\n      danger: {\n        icon: 'ni ni-support-16',\n        strong: 'Danger!',\n      },\n      info: {\n        icon: 'ni ni-bell-55',\n        strong: 'Info!',\n      },\n      warning: {\n        icon: 'ni ni-bell-55',\n        strong: 'Warning!',\n      }\n\n    }\n\n\n\n\n\n\n\n\n  constructor(private glob: GlobalService) {\n   \n  }\n\n  setup() {\n    if (this.current_member_id != null) {\n      var ticket: Ticket = {\n        id: this.current_member_id,\n        data: this.decrypt(this.current_member_encrypted_password)\n      }\n      this.glob.login(ticket).subscribe(data => {\n        this.fillMember(<Member>data, ticket)\n        // var alert_ticket: AlertTicket = { action_attempted: Actions.login, msg: 'Login Succesful', type: 'success' };\n\n        // this.addAlert(alert_ticket)\n      },\n        error => {\n          // var alert_ticket: AlertTicket = { action_attempted: Actions.login, msg: 'Login Failed', type: 'danger' };\n\n          // this.addAlert(alert_ticket)\n        })\n    }\n\n    this.reload_contest()\n  }\n  reload_contest() {\n    this.glob.getContest().subscribe(data => {\n      this.populateContest(data);\n    },\n      error => {\n        var alert_ticket: AlertTicket = { action_attempted: Actions.currrentContest, msg: 'Could Load Current Contest', type: 'danger' };\n\n        this.addAlert(alert_ticket)\n      });\n\n    this.glob.getPreviousWinner().subscribe(data => {\n      this.populatePreviousWinner(data);\n    },\n      error => {\n        var alert_ticket: AlertTicket = { action_attempted: Actions.currrentContest, msg: 'Could Load Prev Contest', type: 'danger' };\n\n        this.addAlert(alert_ticket)\n      });\n\n  }\n\n\n  encrypt(value) {\n    var res = value;\n    // encrypt\n    return res;\n\n  }\n  decrypt(value) {\n    var res = value;\n    // decrypt\n    return res;\n  }\n  fillMember(mem: Member, ticket: Ticket) {\n    this.current_member_id = ticket.id;\n    localStorage.setItem(\"current_member_id\", ticket.id);\n    localStorage.setItem(\"current_member_encrypted_password\", this.encrypt(ticket.data));\n\n    this.reloadBS(mem);\n\n\n  }\n\n  reloadBS(mem: Member) {\n    this.current_member = mem;\n    this.current_member_bs.next(mem);\n  }\n  logOff() {\n    this.current_member_id = null;\n    localStorage.removeItem(\"current_member_id\");\n    localStorage.removeItem(\"current_member_encrypted_password\");\n    this.temp_member = null\n    this.temp_ticket = null;\n    this.reloadBS(null);\n  }\n\n  populateContest(data) {\n    this.currentContest = data;\n    this.currentContest_bs.next(data);\n  }\n\n  populatePreviousWinner(data) {\n    this.previousWinner = data;\n    this.previousWinner_bs.next(data);\n  }\n\n  addAlert(alert_ticket: AlertTicket) {\n    var type: Type;\n    switch (alert_ticket.type) {\n      case \"success\":\n        type = this.types.success\n        break;\n      case \"info\":\n        type = this.types.info\n        break;\n      case \"warning\":\n        type = this.types.warning\n        break;\n      case \"danger\":\n        type = this.types.danger\n        break;\n\n      default:\n        break;\n    }\n\n    var alert: IAlert = {\n      id: this.count,\n      message: alert_ticket.msg,\n      strong: type.strong,\n      icon: type.icon,\n      type: alert_ticket.type\n    };\n    this.alerts.push(alert);\n    setTimeout(\n      () => {\n        this.closeAlert(alert);\n      },\n      this.popup\n    );\n  }\n\n  closeAlert(alert: IAlert) {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Ticket } from '../interfaces/ticket';\nimport { backendUrl } from '../constants/app.constant';\nimport { Member } from '../models/member';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalService {\n\n  constructor(private http:HttpClient) { }\n\n  login(ticket:Ticket)\n  {\n      return this.http.post(backendUrl+\"login\",ticket);\n  }\n  generateCode(mem:Member)\n  {\n     return this.http.post(backendUrl+\"generateCode\",mem);\n  }\n  authenticate(ticket:Ticket)\n  {\n      return this.http.post(backendUrl+\"authenticateCode\",ticket);\n  }\n  getContest()\n  {\n    return this.http.get(backendUrl+\"getContest\");\n  }\n  getPreviousWinner()\n  {\n    return this.http.get(backendUrl+\"getPreviousWinner\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { isSmallScreen } from '../constants/app.constant';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\ndeclare var jQuery: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UIService {\r\n\r\n  private closeResult: string;\r\n\r\n  constructor(private modalService: NgbModal) {\r\n\r\n  }\r\n\r\n  container_or_fluid() {\r\n    if (isSmallScreen) return \"container-fluid\"\r\n    return \"container\"\r\n  }\r\n\r\n  open(content, type, modalDimension) {\r\n    if (modalDimension === 'sm' && type === 'modal_mini') {\r\n      this.modalService.open(content, { windowClass: 'modal-mini', size: 'sm', centered: true }).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      });\r\n    } else if (modalDimension === '' && type === 'Notification') {\r\n      this.modalService.open(content, { windowClass: 'modal-danger', centered: true }).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      });\r\n    } else {\r\n      this.modalService.open(content, { centered: true }).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n      }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n      });\r\n    }\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n  auto_size_text_area() {\r\n    // auto hieght for ttextareas\r\n    (function ($) {\r\n      $('.textarea').each(function () {\r\n      }).on('input', function () {\r\n        this.style.height = 'auto';\r\n        this.style.height = (this.scrollHeight) + 'px';\r\n      });\r\n      $('.textarea').each(function () {\r\n      }).on(\"blur\", function () {\r\n        this.style.height = 'auto';\r\n      });\r\n      $('.textarea').each(function () {\r\n      }).on(\"focus\", function () {\r\n        this.style.height = 'auto';\r\n        this.style.height = (this.scrollHeight) + 'px';\r\n      });\r\n\r\n    })(jQuery);\r\n\r\n  }\r\n\r\n  upload_button() {\r\n\r\n    const inputs = document.getElementsByClassName(\"target_input\");\r\n    const buttons = document.getElementsByClassName(\"button_upload\");\r\n\r\n\r\n    if (buttons.length == inputs.length) {\r\n      var pairs = [];\r\n\r\n      for (var i = 0; i < buttons.length; i++) {\r\n        pairs.push(\r\n          {\r\n            button: buttons[i],\r\n            input: inputs[i],\r\n          }\r\n        )\r\n      }\r\n\r\n      pairs.forEach(pair => {\r\n        pair.button.addEventListener('click', function () {\r\n          var ele = pair.input as HTMLElement;\r\n          ele.click();\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  dismissAll() {\r\n    this.modalService.dismissAll();\r\n         }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}